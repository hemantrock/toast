@using TOAST.Business;
@using TOAST.Data.Model;
@model List<TOAST.Data.Model.tblLoadDetail>
@{
    Layout = null;
    
    double CompWidth;
    double total = Convert.ToDouble(Model.Sum(x => x.PresetQty));

    double width = 94 / (total == 0 ? 94 : total);
    tblLoadMaster mas = (Model.FirstOrDefault() != null ? Model.FirstOrDefault().tblLoadMaster : null);

    tblTruckStatu objTruckStatus = mas.tblTruckStatu;
    SharedBL bl = new SharedBL(1);
    bool IsBGEntryUnAvailable = bl.IsBGEntryUnAvailable();
    string strDefWB = bl.GetDefaultWeighBridge();
    bool IsBGExitUnAvailable = bl.IsBGExitUnAvailable();

    string activityDetail = mas.tblTruckMaster.TruckNumber + " (" + mas.ShipmentNo + ")";
}

@if (mas != null)
{
	<div class="truck-container" style="position:relative;">
		<div class="bay-truck-fill-container">
			<div>
				@foreach (tblLoadDetail itm in Model)
				{
					CompWidth = Convert.ToDouble(width * itm.PresetQty);

					<div class="box" style="width:@CompWidth%">
						<div>
							<div class="fill" style="background-color: @itm.tblProduct.ProductColor ; height:@((((itm.BaseProdQtyGrs ?? 0) + (itm.PrevBaseQty ?? 0) + (itm.EthBlendingQtyGrs ?? 0 ) + (itm.PrevBlendQty ?? 0)) / itm.PresetQty) * 100)%;">
							</div>
							<div class="hsd-lbl text-center">@itm.tblProduct.ProdNameShort</div>
							<div class="hsd-ltr text-center">@((itm.BaseProdQtyGrs ?? 0) + (itm.PrevBaseQty ?? 0) + (itm.EthBlendingQtyGrs ?? 0) + (itm.PrevBlendQty ?? 0))</div>
							<div class="hsd-ltr text-center">@Convert.ToInt32(((((itm.BaseProdQtyGrs ?? 0) + (itm.PrevBaseQty ?? 0) + (itm.EthBlendingQtyGrs ?? 0) + (itm.PrevBlendQty ?? 0)) / itm.PresetQty) * 100))%</div>
						</div>

					</div>
				}
			</div>
		</div>





	</div>

	<table cellpadding="0" cellspacing="0" border="0" width="100%">
		<tr>
			<td width="49%" valign="top">
				<table width="100%" border="1" class="truck-detail-info">
					<tr>
						<td class="truck-detail-info-head" width="50%">Truck No.</td>
						<td width="50%">@mas.tblTruckMaster.TruckNumber</td>


					</tr>
					<tr>
						<td class="truck-detail-info-head">Card No.</td>
						<td>@(mas.tblCard == null ? 0 : mas.tblCard.CardNumber)</td>
					</tr>
					<tr>
						<td class="truck-detail-info-head">FAN No</td>
						<td>@(mas.LoadID)</td>
					</tr>
				</table>
			</td>
			<td width="2%;">&nbsp;</td>
			<td width="49%;"  valign="top" align="right">
				<table width="100%" border="1" class="truck-detail-tbl">
					<thead>
						<tr>
							<th>Comp</th>
							<th>Preset Qty</th>
							@if (mas.tblLoadDetails.FirstOrDefault().tblProduct.tblUOMMaster.UOM.ToUpper() == "LTR")
								{
								<th>Base Product</th>
								<th>Additive1</th>
								<th>Additive2</th>
								<th>Eth Blending</th>
							}
							else
							{
								<th style="display:none;"></th>
								<th style="display:none;"></th>
								<th style="display:none;"></th>
								<th style="display:none;"></th>
							}
							<th>Total Filled</th>
						</tr>
					</thead>

					<tbody>
						@foreach (tblLoadDetail itm in Model)
							{
							<tr>
								<td class="truck-detail-row-heading">@itm.CompNo</td>
								<td>@itm.PresetQty</td>
								@if (mas.tblLoadDetails.FirstOrDefault().tblProduct.tblUOMMaster.UOM.ToUpper() == "LTR")
							{
									<td>@((itm.BaseProdQtyGrs) ?? 0 + (itm.PrevBaseQty ?? 0))</td>
									<td>@((itm.AdditiveQty1 ?? 0) + (itm.PrevAdditiveQty1 ?? 0))</td>
									<td>@((itm.AdditiveQty2 ?? 0) + (itm.PrevAdditiveQty2 ?? 0))</td>
									<td>@((itm.EthBlendingQtyGrs ?? 0) + itm.PrevBlendQty ?? 0))</td>
								}
								else
								{
									<td style="display:none;"></td>
									<td style="display:none;"></td>
									<td style="display:none;"></td>
									<td style="display:none;"></td>
								}
								<td>@((itm.BaseProdQtyGrs ?? 0) + (itm.PrevBaseQty ?? 0) + (itm.EthBlendingQtyGrs ?? 0) + (itm.PrevBlendQty ?? 0))</td>
							</tr>
						}
					</tbody>
				</table>
			</td>
		</tr>
	</table>
    <div class="row">
       

        @if (objTruckStatus.TruckCancel == true)
        {
            <div class="text-right">
                <a id="btnSampleQty" role="button" class="btn btn-primary" href="#" onclick="ShowPasswordModalForReqTrn('Add Sampling Qty', function (ApproverId) { SampleQtyView('@mas.LoadID',ApproverId); } , 'Add Sampling Qty', '@activityDetail', '@mas.LoadID');">
                    <span class="glyphicon glyphicon-plus-sign">  </span>Add Sample Qty
                </a>
            </div>
        }


        @if (objTruckStatus.AssignBayCard == true)
        {
            <div class="text-right">
                <a id="btnBayAssign" role="button" class="btn btn-primary" href="#" onclick="BayAssign('@mas.LoadID');">
                    <span class="glyphicon glyphicon-check"></span>Bay Assign
                </a>
            </div>
        }
        @if (objTruckStatus.AssignCard == true)
        {
            <div class="text-right">
                <a id="btnCardAssign" role="button" class="btn btn-primary" href="#" onclick="CardAssignView('@mas.LoadID');">
                    <span class="glyphicon glyphicon glyphicon-credit-card"></span>Card Assign
                </a>
            </div>
        }

        @if (objTruckStatus.CardReallocate == true)
        {
            <div class="text-right">
                <a id="btnCardReallocate" role="button" class="btn btn-primary" href="#" onclick="CardToBeReallocated('@mas.LoadID');">
                    <span class="glyphicon glyphicon-refresh"></span>Card To Reallocate
                </a>
            </div>
        }
        @if (objTruckStatus.CardReauthorize == true)
        {
            <div class=" text-right">
                <a id="btnCardReAuthorize" role="button" class="btn btn-primary" href="#" onclick="CardReauthorize('@mas.LoadID');">
                    <span class="glyphicon glyphicon-repeat"></span>ReAuthorize Card
                </a>
            </div>
        }
        @if (objTruckStatus.BayReallocate == true)
        {
            <div class="text-right">
                <a id="btnBayReallocate" role="button" class="btn btn-primary" href="#" onclick="BayReallocate('@mas.LoadID');">
                    <span class="glyphicon glyphicon-refresh">  </span>Bay To Reallocate
                </a>
            </div>
        }
        @if (objTruckStatus.BayDeallocate == true)
        {
            <div class="text-right">
                <a id="btnBayDeallocate" role="button" class="btn btn-primary" href="#" onclick="BayDeallocate('@mas.LoadID');">
                    <span class="glyphicon glyphicon-arrow-down">  </span>Bay Deallocate
                </a>
            </div>
        }
        <!--if (objTruckStatus.Regularize == true && Model.tblLoadDetails.Any(x => (x.LoadStatus == 1 || x.LoadStatus == 3 || x.LoadStatus == 5 || x.LoadStatus == 6))) -->
        @if (objTruckStatus.Regularize == true && !mas.tblLoadDetails.Any(x => (x.LoadStatus == 2)))
        {
            <div class="text-right">
                <a id="btnRegularize" role="button" class="btn btn-primary" href="#" onclick="ShowPasswordModalForReqTrn('Truck Regularize', function (ApproverId) { TruckRegularizeView('@mas.LoadID',ApproverId); } , 'TT Regularize', '@activityDetail', '@mas.LoadID');">
                    <span class="glyphicon glyphicon-transfer">  </span>Regularize
                </a>
            </div>
        }
        @if (objTruckStatus.TruckCancel == true)
        {
            <div class="text-right">
                <a id="btnTruckCancel" role="button" class="btn btn-primary" href="#" onclick="ShowPasswordModalForReqTrn('Truck Cancel', function (ApproverId) { TruckCancel('@mas.LoadID',ApproverId); } , 'TT Cancel', '@activityDetail', '@mas.LoadID', '@mas.LoadID');">
                    <span class="glyphicon glyphicon-remove">  </span>Cancel Truck
                </a>
            </div>
        }
        @if (objTruckStatus.TruckAbort == true && mas.tblLoadDetails.Any(x => x.LoadStatus == 3))
        {
            <div class="text-right">
                <a id="btnTruckAbort" role="button" class="btn btn-primary" href="#" onclick="ShowPasswordModalForReqTrn('Truck Abort', function (ApproverId) { TruckAbort('@mas.LoadID',ApproverId); }, 'TT Abort', '@activityDetail', '@mas.LoadID');">
                    <span class="glyphicon glyphicon-remove">  </span>Abort Truck
                </a>
            </div>
        }
        @if (objTruckStatus.TruckSick == true && mas.tblLoadDetails.Any(x => x.LoadStatus == 3))
        {
            <div class="text-right">
                <a id="btnTruckSick" role="button" class="btn btn-primary" href="#" onclick="ShowPasswordModalForReqTrn('Truck Sick', function (ApproverId) { TruckSick('@mas.LoadID',ApproverId); }, 'TT Sick', '@activityDetail', '@mas.LoadID');">
                    <span class="glyphicon glyphicon-exclamation-sign">  </span>Truck Sick
                </a>
            </div>
        }
        @if (objTruckStatus.BaySick == true && mas.tblLoadDetails.Any(x => x.LoadStatus == 3))
        {
            <div class="text-right">
                <a id="btnBaySick" role="button" class="btn btn-primary" href="#" onclick="ShowPasswordModalForReqTrn('Bay Sick', function (ApproverId) { BaySick('@mas.LoadID',ApproverId); }, 'Bay Sick','@activityDetail', '@mas.LoadID');">
                    <span class="glyphicon glyphicon-ban-circle">  </span>Bay Sick
                </a>
            </div>
        }
        @if (objTruckStatus.TruckCheckOut == true)
        {
            <div class="text-right">
                <a id="btnTruckCheckOut" role="button" class="btn btn-primary" href="#" onclick="TruckCheckOut('@mas.LoadID');">
                    <span class="glyphicon glyphicon-log-out">  </span>CheckOut Truck
                </a>
            </div>
        }
        @if (objTruckStatus.LogWeight == true
                || (objTruckStatus.TruckStatus == 124 && IsBGEntryUnAvailable == true
                        && (strDefWB.ToUpper().Contains("WBCRSIDE") || strDefWB.ToUpper().Contains("WBPARKSIDE")))
            )
        {
            <div class="text-right">
                <a id="btnLogWeight" role="button" class="btn btn-primary" href="#" onclick="LogWeight('@mas.LoadID');">
                    <span class="glyphicon glyphicon-download-alt">  </span>Log Weight
                </a>
            </div>
        }
        @if (objTruckStatus.TruckTerminate == true)
        {
            <div class="text-right">
                <a id="btnTruckTerminate" role="button" class="btn btn-primary" href="#" onclick="ShowPasswordModalForReqTrn('TT Terminate', function (ApproverId) { TruckTerminate('@mas.LoadID',ApproverId); }, 'TT Terminate','@activityDetail', '@mas.LoadID');">
                    <span class="glyphicon glyphicon-remove-circle">  </span>Terminate Truck
                </a>
            </div>
        }
        @if (objTruckStatus.PrintFAN == true)
        {
            <div class="text-right">
                <a id="btnPrintFAN" role="button" class="btn btn-primary" href="#" onclick="PrintFAN('@mas.LoadID');">
                    <span class="glyphicon glyphicon-print">  </span>Print FAN
                </a>
            </div>
        }
        @if (objTruckStatus.PrintBOL == true)
        {
            <div class="text-right">
                <a id="btnPrintBOL" role="button" class="btn btn-primary" href="#" onclick="PrintBOL('@mas.LoadID');">
                    <span class="glyphicon glyphicon-print">  </span>Print BOL
                </a>
            </div>
        }
        @if (objTruckStatus.PrintUAN == true)
        {
            <div class="text-right">
                <a id="btnPrintUAN" role="button" class="btn btn-primary" href="#" onclick="PrintUAN('@mas.LoadID');">
                    <span class="glyphicon glyphicon-print">  </span>Print UAN
                </a>
            </div>
        }
        @if (mas.ManualPost == true)
        {
            <div class="text-right">
                <a id="btnManualPost" role="button" class="btn btn-primary" href="#" onclick="ManualPost('@mas.LoadID');">
                    <span class="glyphicon glyphicon-tasks">  </span>Postload Repost
                </a>
            </div>
        }
    </div>
}