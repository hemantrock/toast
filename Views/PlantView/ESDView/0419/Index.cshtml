@using TOAST.Data.Model;
@using TOAST.Shared;
@using TOAST.Business;
@model List<TOAST.Data.Model.tblDeviceMaster>
@{
    ViewBag.Title = "Plant View - ESD Status View";
    List<tblDeviceMaster> lstESD = Model.Where(x => x.DeviceID == 16).ToList();
    List<string> SoftESDs = new List<string>() { "SOFT", "HMI" };
    List<tblDeviceMaster> lstMCPs = new PlantViewBL(1).GetDeviceDetails(new List<int>() { 14 });
}

<div class="row">
    <div class="col-lg-12">
        <h3 class="grid-headerplant" style="color:black">ESD Status View</h3>

    </div>
</div>

<div class="row m-t-40 esd-status-view-container">
    <div class="col-lg-8">
        <table class="table-striped app-tbl">
            <thead>
                <tr><th class="text-center header-main" colspan="8">EMERGENCY SHUTDOWN</th></tr>
                <tr>
                    <th class="text-left header-col">#</th>
                    <th class="text-left header-col">ESD Push Button Location</th>
                    <th class="text-center header-col">Status</th>
                    <th class="text-left header-col">#</th>
                    <th class="text-left header-col">ESD Push Button Location</th>
                    <th class="text-center header-col">Status</th>
                </tr>
            </thead>
            <tbody>
                @{

                    for (int i = 0; i < lstESD.Count; i = i + 2)
                    {
                        <tr>
                            <td width="5%" class="bold" style="text-align: center;">@lstESD[i].TypeSeqNo</td>
                            <td width="25%" class="bold">@lstESD[i].DeviceDesc</td>
                            <td width="10%"><span class="alert-cont-md"><span class="@lstESD[i].TagPrefix @(lstESD[i+1].TagPrefix)_STATUS"><span class="alert-maint-mode @(lstESD[i].TagPrefix)_MAINT"></span></span></span></td>

                            @{ if (i + 1 >= lstESD.Count)
                                {
                                    <td width="5%" class="bold" style="text-align: center;"></td>
                                    <td class="bold"></td>
                                    <td></td>
                                }
                                else
                                {
                                    <td width="5%" class="bold" style="text-align: center;">@lstESD[i + 1].TypeSeqNo</td>
                                    <td class="bold">@lstESD[i + 1].DeviceDesc</td>
                                    <td><span class="alert-cont-md"><span class="@lstESD[i+1].TagPrefix @(lstESD[i+1].TagPrefix)_STATUS"><span class="alert-maint-mode @(lstESD[i+1].TagPrefix)_MAINT"></span></span></span></td>
                                }
                            }
                        </tr>
                                }
                                <tr>
                                    <td width="5%" class="bold" style="text-align: center;"></td>
                                    <td class="bold tooltips" title="Click to view Radar Relay Status" onclick="OpenRadarRelays()"><a href="javascript: void(0)">ESD Radar Relay</a></td>
                                    <td><span class="alert-cont-md"><span class="ESD_RDR_RELAY"></span></span></td>
                                    <td width="5%" class="bold" style="text-align: center;"></td>
                                    <td class="bold tooltips" title="Click to view VFT Switch Status" onclick="OpenAOPView()"><a href="javascript: void(0)">ESD - Vibrating Fork</a></td>
                                    <td><span class="alert-cont-md"><span class="ESD_VFS"></span></span></td>
                                </tr>
                }

            </tbody>
        </table>
    </div>
    <div class="col-lg-4">
        <table class="table-striped app-tbl">
            <thead>
                <tr><th class="text-center header-main" colspan="2">MCPs</th></tr>
                <tr>
                    <th class="text-left header-col">MCP Description</th>
                    <th class="text-center header-col">Status</th>
                </tr>
            </thead>
            <tbody>
                @{
                    foreach (tblDeviceMaster mcp in lstMCPs)
                    {
                        <tr>
                            <td class="bold">@mcp.DeviceDesc</td>
                            <td><span class="alert-cont-md"><span class="@(mcp.TagPrefix+"_ALARM")"></span></span></td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>
<div class="row m-t-20">
    <div class="col-lg-6 col-sm-6">
        <div class="esd-timer-block esd-mockdrill-block">
            <div class="timer-lbl">Soft ESD</div>
            <div class="timer-val" style="min-width: 70px;">
                <span class="alert-cont-md">
                    <span class="SOFT_ESD"></span>
                </span>
            </div>
            <div class="timer-lbl">ESD Active:</div>
            <div class="timer-val" style="min-width: 70px;">
                <span class="alert-cont-md">
                    <span class="PROCESS_ESD"></span>
                </span>
            </div>
            <div class="hide timer-lbl">Mock Drill:</div>
            <div class="hide timer-val" style="min-width: 70px;">
                <span class="alert-cont-md">
                    <span class="IS_MOCK_DRILL_ESD"></span>
                </span>
            </div>
            <div class="timer-lbl">Power ESD:</div>
            <div class="timer-val" style="min-width: 70px;">
                <span class="alert-cont-md">
                    <span class="ESD_RELAY_PCC_PANEL"></span>
                </span>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-sm-6 text-right esd-timer-wrapper">
        <div class="esd-timer-block">
            <div class="timer-lbl">Time Lapsed (Sec):</div>
            <div class="timer-val ESD_POW_TIME_REM" style="min-width: 85px;">?</div>


            <div class="timer-lbl">Set Time (msec):</div>
            <div class="timer-val" style="padding-left: 16px; padding-top: 13px;">
                <span class="ESD_TIMER?">120 sec</span>
                @*<input type="number" min=0 readonly class="editable-input ESD_TIMER" ondblclick="this.readOnly='';"
                    style="border: 0px; width: 70%" value="ESD_TIMER">*@
                <span style="display:none" class="glyphicon glyphicon-upload cursor-point" onclick="SetProcessValue('Update ESD Timer', 'Update ESD Timer from TOAST', this, 'ESD_TIMER', 'GENERIC', '@Session[clsConstants.UserID]', '@Session[clsConstants.LoginID]', '@Session[clsConstants.UserName]')" aria-hidden="true"></span>
                @*<input type="text" class="form-control ESD_TIME_ENTRY" placeholder="SS" id="txtESDTimeEntry">
                    <div class="ack-alarm">
                        <a class="push-btn" href="javascript:void(0);" onclick="SetProcessValue('Update ESD Timer', 'Update ESD Timer from TOAST', this, 'ESD_TIMER', 'GENERIC', '@Session[clsConstants.UserID]', '@Session[clsConstants.LoginID]', '@Session[clsConstants.UserName]')" data-opcvalue="">Set Time</a>
                    </div>*@
            </div>
        </div>
    </div>
</div>
<div class="row m-t-20">
    <div class="col-lg-8 text-left esd-action-btn">
        <div class="esd-timer-block esd-mockdrill-block">
            <div class="timer-lbl"><span class="glyphicon glyphicon-bookmark">  </span>Mock Drill</div>
            <div class="timer-val" style="min-width: 30px;">
                <div class="toggle-wrapper float-r" onclick="cancelBubble(event);SetProcessValue('Set Siren to Mock Drill Mode','Siren: 01',this, 'SIREN01_MOCK_DRILL', 'TOGGLE', '@Session[clsConstants.UserID]', '@Session[clsConstants.LoginID]', '@Session[clsConstants.UserName]')">
                    <input id="toggle-maintainence-mode" class="on-off-btn SIREN01_MOCK_DRILL" data-on="On" data-off="Off" checked type="checkbox" data-opcvalue="">
                </div>
            </div>
            <div class="timer-lbl"><span class="glyphicon glyphicon-warning-sign"></span>Ack</div>
            <div class="timer-val" style="min-width: 30px;">
                <div class="float-r" style="height:30px;border-collapse: separate;padding: 0;margin: 0;">
                    <a class="push-btn-01" style="top: 9px;width: 83px;font-size: 16px;" href="javascript:void(0);" onclick="cancelBubble(event);SetProcessValue('Acknowledge Active Siren','Siren: SIREN01',this, 'SIREN01_ACK', 'PULSE', '@Session[clsConstants.UserID]', '@Session[clsConstants.LoginID]', '@Session[clsConstants.UserName]')">ACK</a>
                </div>
            </div>
            <div class="timer-lbl"><span class="glyphicon glyphicon-refresh"></span>Reset</div>
            <div class="timer-val" style="min-width: 30px;">
                <div class="toggle-wrapper float-r" onclick="cancelBubble(event);SetProcessValue('Set Siren to All Clear Mode','Siren: 01',this, 'SIREN01_RESET', 'TOGGLE', '@Session[clsConstants.UserID]', '@Session[clsConstants.LoginID]', '@Session[clsConstants.UserName]')">
                    <input id="toggle-maintainence-mode" class="on-off-btn SIREN01_RESET" data-on="On" data-off="Off" checked type="checkbox" data-opcvalue="">
                </div>
            </div>
        </div>

    </div>
    <div class="col-lg-4 text-right esd-link">
        <a href="#" onclick="OpenESDCauseEffectViewHMI()">View ESD Cause &amp; Effect <i class="fa fa-caret-right" aria-hidden="true"></i></a>
    </div>
</div>

<script src="~/Scripts/PageJS/PlantView/ESDView/Index.js"></script>