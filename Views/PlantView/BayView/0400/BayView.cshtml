@using TOAST.Shared;
@using TOAST.Business;
@using TOAST.Data.Model;

@model List<tblLoadingPointMaster>
@{
    ViewBag.Title = "Plant View - Bay View";
    Layout = null;
    byte BayNo = Model.Select(o => o.BayID).FirstOrDefault() ?? 0;
    string visibility = "visibility: hidden;";
    List<byte> Arms = Model.Select(x => x.ArmNo ?? 0).Distinct().ToList();
    string strBPBS = (Model.Any(x => x.IsBPBSBypassed == false) ? "BPBS_0" : "BPBS_1");
    string strRIT = (ViewBag.IsRITAvailable == false ? "RIT_0" : "RIT_" + Arms.Count());

    string BayId = "B" + BayNo.ToString("D2");
    string Prodcolor = "#808080";
    double PresetQtySum = 0, filledQtySum = 0;
    List<tblLoadDetail> loadDetailData = ViewBag.loadDetailData;
    List<tblMeterMaster> meterMasterData = ViewBag.meterMasterData;
    List<tblBatchController> BayBCs = ViewBag.BatchControllerData;
    List<tblAdditivesMaster> AdditiveData = ViewBag.AdditiveData;
    tblLoadMaster mast = ((loadDetailData == null) ? null : loadDetailData.FirstOrDefault().tblLoadMaster);
    List<tblBatchSetup> Batches = ((mast == null) ? null : mast.tblBatchSetups.ToList());
    string BCSuffix = "BC" + string.Format("{0:00}", Model.FirstOrDefault().tblBatchController.SlaveID);
    bool ViewSteps = Convert.ToBoolean(ViewBag.StepDetail);
    double CompWidth = 0, total = 0, width = 0;
    string FAN_No = (mast==null?"":mast.FANSlipNo??"");
    if (loadDetailData != null)
    {
        visibility = "";
        int NoOfComps = loadDetailData.Count();
        foreach (tblLoadDetail loadDetail in loadDetailData)
        {
            total += Convert.ToDouble(loadDetail.PresetQty);
        }
        width = (99 - NoOfComps) / (total == 0 ? (99 - NoOfComps) : total);
    }
    string CustName = clsConfig.CustomerName;
    string Application = clsConfig.Application;
    List<string> lstOtherPages = ViewBag.lstMtrPages;
}


<style type="text/css">
    .container {
        background-color: #f7f4e6;
        border: thin solid #808080;
        padding: 20px;
        margin: 20px;
    }
</style>

<div class="row hidden-sm hidden-md hidden-xs">
    <div class="bay-view-main-container">
        <div class="bay-view-wrapper p-400">
            <div class="row bay-view-top">
                <div class="col-lg-12">
                    <div class="pipe-container">

                        @foreach (tblMeterMaster Mtr in meterMasterData)
                        {
                            List<tblLoadingPointProduct> LPProds = Mtr.tblLoadingPointMaster.tblLoadingPointProducts.ToList();
                            byte BayNum = (Mtr.tblLoadingPointMaster.BayID ?? 0);
                            byte ArmNum = (Mtr.tblLoadingPointMaster.ArmNo ?? 0);
                            string BayArmSuffix = "B" + string.Format("{0:00}", Convert.ToInt32(BayNum)) + "_A" + string.Format("{0:00}", Convert.ToInt32(ArmNum));
                            string CompSuffix = "CN" + string.Format("{0:00}", Convert.ToInt32(Mtr.MeterCompNo)) +"_"+ BayArmSuffix;
                            short HeaderNo = 0; string ProductName = ""; string ChColor = "#ccc"; tblBatchSetup Batch = null; tblLoadDetail Detail = null;
                            if (Batches != null)
                            {
                                Batch = Batches.Where(x => x.LoadingPointNo == Mtr.LPNo).FirstOrDefault();
                                if (Batch != null)
                                {
                                    Detail = loadDetailData.Where(x => x.LoadID == (Batch.LoadID ?? 0) && x.CompNo == (Batch.CompNo ?? 0)).FirstOrDefault();
                                }
                            }

                            if (Detail == null) { ChColor = Mtr.tblProduct.ProductColor; } else { ChColor = Detail.tblProduct.ProductColor; }
                            { HeaderNo = Mtr.tblProduct.HeaderNo ?? 0; ProductName = Mtr.tblProduct.ProdNameShort; }
                            string HdrSuffix = "HDR" + string.Format("{0:00}", Convert.ToInt32(HeaderNo));
                            string HdrValve = "HV" + string.Format("{0:00}", Convert.ToInt32(HeaderNo));
                            string meterNo = ArmNum + "_" + Mtr.MeterCompNo;
                            <div class="pipe pipe_@meterNo" style="background-color: @Mtr.tblProduct.ProductColor">
                                <span id="@BayArmSuffix" class="CURR_CHAMBER_@BayArmSuffix" style="display:none"></span>
                                <input type="hidden" id="chamber_to_go_@meterNo" class="chamber_to_go" value="@((Batch==null)?0:Batch.CompNo)" />
                                <span class="chamber_to_go" style="display:none">@ArmNum</span>
                                <span class="mbv1" style="display:none"></span>
                                <span title="No Feedback" data-tooltip-attr="PVALVE*" class="tooltips product-valve @("OPN_IMG_"+HdrValve+"_"+CompSuffix) @("CLS_IMG_"+HdrValve+"_"+CompSuffix)">
                                    <span class="product-valve-lbl">@Mtr.tblProduct.ProdNameShort</span>
                                </span>
                                <span class="bayview-airline-valve-pipe" style="background-color: @Mtr.tblProduct.ProductColor">
                                    <span title="No Feedback" data-tooltip-attr="PVALVE*" class="tooltips bayview-airline-valve  @("OPN_IMG_AV_"+CompSuffix) @("CLS_IMG_AV_"+CompSuffix)">
                                        <span class="product-valve-lbl">Air Line</span>
                                    </span>
                                </span>
                                <div class="mfm-block">
                                    <span class="mfm @Mtr.tblMeterMake.Make.ToLower() @Mtr.tblMeterMake.Model.ToLower()"></span>
                                    <span class="pipe-data tooltips get-hover mfm-flwrate" title="MFM Flow Rate" onclick="OpenChartModal('MFM_MASS_FLWRATE_@CompSuffix','')"><strong class="MFM_MASS_FLWRATE_@CompSuffix"> </strong> @clsConfig.FlowRateUnit</span>
                                    <span class="pipe-data tooltips get-hover mfm-temp" title="MFM Temp" onclick="OpenChartModal('MFM_TEMP_@CompSuffix','')"><strong class="MFM_TEMP_@CompSuffix"> </strong> °C</span>
                                    <span class="pipe-data one tooltips get-hover obs-des" onclick="OpenChartModal('MFM_OBS_DENSITY_@CompSuffix','')" title="Observed Density"> <strong class="MFM_OBS_DENSITY_@CompSuffix"> </strong> kg/m³</span>
                                    @*<span class="pipe-data two tooltips get-hover std-des" onclick="OpenChartModal('MFM_STD_DENS_@CompSuffix','')" title="Density at 15°C"> <strong class="MFM_STD_DENS_@CompSuffix"> </strong> kg/m³</span>*@
                                    <span class="pipe-data mfm-name" style="color: @Mtr.tblProduct.ProductColor"><strong>@ProductName</strong></span>
                                </div>
                                @*<span class="rtd">
                                    <span class="pipe-data tooltips get-hover" onclick="OpenChartModal('TEMP_@CompSuffix','')" title="RTD Temp"><strong class="TEMP_@CompSuffix"> </strong> °C</span>
                                </span>*@
                                <span class="arm-txt"></span>
                                <span class="dcv">
                                    <span class="pipe-data tooltips get-hover" onclick="OpenChartModal('BC_FLOWRATE_@CompSuffix','')" title="BC Flow Rate"><strong class="BC_FLOWRATE_@CompSuffix"> </strong> lpm</span>
                                </span>
                                <span class="mbv" style="display:none"></span>
                                <div class="multipleBay">
                                    <div class="valve-detail-1 valve-detail">
                                        <span class="pipe-data tooltips get-hover temp-tag" title="Header Temperature" onclick="OpenChartModal('TT_@HdrSuffix','')"><strong class="TT_@HdrSuffix"> </strong> °C</span>
                                        <span class="hide">
                                            Arm: <strong>@(string.Format("{0:00}", Convert.ToInt32(ArmNum))) </strong>
                                            Mtr: <strong>@(string.Format("{0:00}", Convert.ToInt32(Mtr.MeterCompNo))) </strong>
                                        </span>
                                        <span class="prod tooltips get-hover" onclick="OpenChartModal('PT_@HdrSuffix','')"  title="Header Pressure"><strong class="PT_@HdrSuffix"> </strong> kg/cm²</span>
                                    </div>
                                </div>
                                @if (Mtr.MeterCompNo == 1)
                                {
                                    <div class="pipe-extension pipe_ext_@ArmNum LAPS_@BayArmSuffix" style="background-color: @ChColor">
                                        <div class="pipe-extension-down pipe_ext_down_@ArmNum" style="background-color: @ChColor"></div>
                                    </div>
                                    tblAdditivesMaster Addtv = AdditiveData.Where(x => x.AdditiveID == Mtr.LPNo).FirstOrDefault();
                                    if (Addtv != null)
                                    {
                                        <div class="pipe-joiner joiner2" style="background-color: @Mtr.tblProduct.ProductColor">
                                            <div class="h_pipe" style="background-color: @Mtr.tblProduct.ProductColor">
                                                <span class="Additive">@Addtv.AdditiveName</span>
                                            </div>

                                        </div>
                                    }
                                }
                                @{
                                    List<tblLoadingPointProduct> OtherLPProds = LPProds.Where(x => x.ProductID != Mtr.BaseProductID).ToList();
                                    if (OtherLPProds.Count() > 0)
                                    {
                                        foreach (tblLoadingPointProduct OtherProd in OtherLPProds)
                                        {
                                            //Mukesh - To Correct this as it copied from Additives. Product Name and valve to be shown.
                                            int othHeaderNo = OtherProd.tblProduct.HeaderNo ?? 0;
                                            string othHdrValve = "HV" + string.Format("{0:00}", Convert.ToInt32(othHeaderNo));
                                            <div class="pipe-joiner joiner2 second" style="background-color: @OtherProd.tblProduct.ProductColor">
                                                
                                                <div class="h_pipe" style="background-color: @OtherProd.tblProduct.ProductColor">
                                                    <span class="Additive"></span>
                                                    <span title="No Feedback" data-tooltip-attr="PVALVE*" class="tooltips product-valve @("OPN_IMG_"+othHdrValve+"_"+CompSuffix) @("CLS_IMG_"+othHdrValve+"_"+CompSuffix)">
                                                        <span class="product-valve-lbl">@OtherProd.tblProduct.ProductName</span>
                                                    </span>
                                                </div>
                                            </div>
                                        }
                                    }
                                }
                                <div class="pipe-joiner" style="background-color: @Mtr.tblProduct.ProductColor"></div>
                            </div>
                        }

                        <div class="pipe-block pipe_block_1" style="display: none;">
                            <span class="mbv1"></span>
                            <span class="strainer"></span>
                            <div class="mass-flow-meter"></div>
                            <span class="rtd"></span>
                            <span class="arm-txt"></span>
                            <span class="dcv"></span>
                            <span class="mbv"></span>
                        </div>
                        @{
                            string showPrevQty = "none";
                            if(loadDetailData!=null && loadDetailData.Count()>0 && loadDetailData.Any(x => (x.PrevBaseQty ?? 0) > 0))
                            { showPrevQty = "block";}
                        }
                        <div class="batch-controller-detail-container" id="bayBatchDetail">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Comp</th>
                                        <th>Arm</th>
                                        <th>Product</th>
                                        <th>Preset</th>
                                        <th style="display:none;">EffPreset</th>
                                        <th style="display:@showPrevQty;">Prev</th>
                                        <th style="display:none;">BaseDBVal</th>
                                        <th>Base</th>
                                        <th style="display:none;">Add</th>
                                        <th style="display:none;">BlendDBVal</th>
                                        <th>Blend</th>
                                        <th>Filled</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (tblLoadDetail itm in loadDetailData ?? Enumerable.Empty<tblLoadDetail>())
                                    {
                                        double PrevQty = ((itm.PrevBaseQty ?? 0) + (itm.PrevBlendQty ?? 0));
                                        double Filled = ((itm.BaseProdQtyGrs ?? 0) + (itm.EthBlendingQtyGrs ?? 0));

                                        string ChBaySuffix = "CH" + @itm.CompNo.ToString("D2") + "_B" + string.Format("{0:00}", Convert.ToInt32(itm.BayID));
                                        string BayArmSuffix = "B" + string.Format("{0:00}", Convert.ToInt32(itm.BayID)) + "_A" + string.Format("{0:00}", Convert.ToInt32(itm.tblLoadingPointMaster.ArmNo));
                                        <tr class="load-status_@itm.LoadStatus">
                                            <td style="display:none;">
                                            @if (itm.LoadStatus == 2)
                                            {
                                                <input type="hidden" class="active_CURR_CHAMBER_@BayArmSuffix" value="@itm.CompNo" />
                                            }
                                            </td>
                                            <td class="text-center">@itm.CompNo</td>
                                            <td class="text-center">@itm.tblLoadingPointMaster.ArmNo</td>
                                            <td>@itm.tblProduct.ProdNameShort</td>
                                            <td class="PresetQty_@ChBaySuffix">@(itm.PresetQty+(itm.SamplingQty??0))</td>
                                            <td style="display:none;" class="Eff_PresetQty_@ChBaySuffix">@((itm.PresetQty ?? 0)+(itm.SamplingQty ?? 0)- PrevQty)</td>
                                            <td style="display:@showPrevQty;" class="QTY_ACC_PREV_@ChBaySuffix">@PrevQty</td>
                                            <td style="display:none;" class="DB_QTY_CN01_@ChBaySuffix">@((itm.BaseProdQtyGrs ?? 0))</td>
                                            <td class="QTY_CN01_@ChBaySuffix">@((itm.BaseProdQtyGrs ?? 0))</td>
                                            <td style="display:none;" class="QTY_ADD_@ChBaySuffix">@((itm.AdditiveQty1 ?? 0) + (itm.AdditiveQty2 ?? 0) + (itm.AdditiveQty3 ?? 0))</td>
                                            <td style="display:none;" class="DB_QTY_CN02_@ChBaySuffix">@((itm.EthBlendingQtyGrs ?? 0))</td>
                                            <td class="QTY_CN02_@ChBaySuffix">@((itm.EthBlendingQtyGrs ?? 0))</td>
                                            <td style="display:none;" class="QTY_ACC_PREV_@ChBaySuffix">@PrevQty</td>
                                            <td class="EFF_QTY_ACC_@ChBaySuffix">@(Filled)</td>
                                            <td>@((itm.LoadStatus == null || itm.tblLoadStatu == null) ? "?" : itm.tblLoadStatu.LoadStatusDesc)</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <input type="hidden" id="PresetQtySum" value="@PresetQtySum" />
                            <input type="hidden" id="filledQtySum" value="@filledQtySum" />
                        </div>

                        <div class="bay-cont interlock-box">
                            <div class="interlock">
                                <div class="bay-head text-center">INTERLOCK</div>
                                <div class="interlock-row">
                                    <div class="inter-lock-lbl">ESD</div>
                                    <div class="inter-lock-val"><span class="PROCESS_ESD alert_bad"></span></div>
                                </div>

                                <div class="interlock-row">
                                    <div class="inter-lock-lbl">Truck Earth</div>
                                    <div class="inter-lock-val">

                                        <span class="circle-cont">
                                            <span class="ER_@BayId status_bad"></span>
                                        </span>
                                    </div>
                                </div>

                                @foreach (tblLoadingPointMaster Arm in Model)
                                {
                                    string BayArmSuffix = "B" + string.Format("{0:00}", Arm.BayID) + "_A" + string.Format("{0:00}", Arm.ArmNo);
                                    <div class="interlock-row @strRIT">
                                        <div class="inter-lock-lbl">RIT Stop Arm @Arm.ArmNo</div>
                                        <div class="inter-lock-val"><span class="STOP_PB_@BayArmSuffix alert_bad"></span></div>
                                    </div>
                                }
                            </div>
                        </div>

                        <div class="bay-cont action-box">
                            <div class="action-container">
                                <div class="bay-head text-center">ACTION</div>
                                @foreach (tblLoadingPointMaster Arm in Model)
                                {
                                    string BayArmSuffix = "B" + string.Format("{0:00}", Arm.BayID) + "_A" + string.Format("{0:00}", Arm.ArmNo);
                                    string BayArmDetail = "BC: " + Arm.tblBatchController.BCName + "; Bay: " + string.Format("{0:00}", Arm.BayID) + "; Arm: " + string.Format("{0:00}", Arm.ArmNo);
                                    <div class="action-sub-heading arm_@Arm.ArmNo">Arm @Arm.ArmNo</div>
                                    <div class="action-btn-row">
                                        <a class="push-btn-01 ACK_ALARM_@BayArmSuffix" href="javascript:void(0);" onclick="AckAlarm('@BayArmDetail', this, 'ACK_ALARM_@BayArmSuffix','@Session[clsConstants.UserID]','@Session[clsConstants.LoginID]','@Session[clsConstants.UserName]')" data-opcvalue="">ACK ALARM</a>
                                        <a class="push-btn-01 REM_STOP_@BayArmSuffix" href="javascript:void(0);" onclick="RemoteStop('@BayArmDetail', this, 'REM_STOP_@BayArmSuffix','@Session[clsConstants.UserID]','@Session[clsConstants.LoginID]','@Session[clsConstants.UserName]')" data-opcvalue="">REM STOP</a>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-2">
                </div>
            </div>


            <!-- second row -->
            <div class="row bay-view-bottom ">
                <div class="col-lg-6 col-sm-6 col-md-6">
                    @foreach (tblLoadingPointMaster Arm in Model)
                    {
                        string BayArmSuffix = "B" + string.Format("{0:00}", Arm.BayID) + "_A" + string.Format("{0:00}", Arm.ArmNo);
                        string ArmNo = string.Format("{0:00 }", Arm.ArmNo);
                        <div class="col-lg-2 col-sm-2 col-md-2 rit-box @strRIT">
                            <div class="bay-cont">
                                <div class="rit-bg">
                                    <div class="rit-box-container">
                                        <span class="rit-start">
                                            <span class="rit_start_bad RIT_START_@BayArmSuffix"></span>
                                            <span class="rit-btn-lbl">START</span>
                                        </span>
                                        <span class="rit-ack">
                                            <span class="rit_ack_bad RIT_ACK_@BayArmSuffix"></span>
                                            <span class="rit-btn-lbl">ACK</span>
                                        </span>

                                        <div class="rit-stop">
                                            <span class="rit_stop_bad RIT_STOP_@BayArmSuffix"></span>
                                            <span class="rit-btn-lbl stop">STOP</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="bay-head text-center">RIT ARM @ArmNo</div>
                            </div>
                        </div>
                    }
                    <div class="bay-cont @strBPBS" style="display:none">
                        <div class="bay-head text-center">BAY PBS</div>
                        <div class="bay-push-bg">
                            <div class="bay-push-box-container">
                                <span class="bay-push-start">
                                    <span class="BATT_CUTOFF_@BayId safety_bco_bad"></span>
                                    <span class="bay-push-btn-lbl">BATT</span>
                                </span>
                                <span class="bay-push-ack">
                                    <span class="HAND_BRAKE_@BayId safety_hb_bad"></span>
                                    <span class="bay-push-btn-lbl">HBR</span>
                                </span>

                                <div class="bay-push-stop">
                                    <span class="FIRE_EXT_@BayId safety_fe_bad"></span>
                                    <span class="bay-push-btn-lbl stop">EXTG</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="dvbatchControllerBox">
                        @if (BayBCs.Count() == 1)
                        {
                            <div class="col-lg-5 col-sm-5 col-md-5 batch-controller-box">
                                <div class="bay-cont">
                                    <div class="batch-cont-row">
                                        <div class="arm-col-left">
                                            <label>Primary Connection</label>
                                            <div class="val">
                                                <span class="circle-cont">
                                                    <span class="@(Model.FirstOrDefault().tblBatchController.TagPrefix+"_CONN01") status_bad"></span>
                                                </span>
                                            </div>
                                        </div>
                                        <div class="arm-col-right">
                                            <label>Secondary Connection</label>
                                            <div class="val">
                                                <span class="circle-cont">
                                                    <span class="@(Model.FirstOrDefault().tblBatchController.TagPrefix+"_CONN02") status_bad"></span>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="batch-controller-bg M_@BayBCs.FirstOrDefault().BCMakes.Value.ToString("D2") Q_@BayBCs.Count().ToString("D2")">


                                        @foreach (tblLoadingPointMaster Arm in Model)
                                        {
                                            string ArmNo = string.Format("{0:00 }", Arm.ArmNo);
                                            string BayArmSuffix = "B" + string.Format("{0:00}", Arm.BayID) + "_A" + string.Format("{0:00}", Arm.ArmNo);
                                            double Preset = 0; double FillQty = 0; double Remaining = 0;
                                            string ChBaySuffix = "";
                                            if (loadDetailData != null)
                                            {
                                                tblLoadDetail det = loadDetailData.Where(x => x.tblLoadingPointMaster.ArmNo == Arm.ArmNo && ((x.LoadStatus ?? 0) != 1 && (x.LoadStatus ?? 0) != 4)).OrderByDescending(x=>x.LoadingStartTime??(new DateTime(9999,12,31))).FirstOrDefault();
                                                if (det != null) {
                                                    Preset = (det.PresetQty ?? 0)+ (det.SamplingQty ?? 0) - (det.PrevBaseQty??0) - (det.PrevBlendQty ?? 0);
                                                    FillQty = ((det.BaseProdQtyGrs ?? 0) + (det.EthBlendingQtyGrs ?? 0));
                                                    Remaining = (Preset - FillQty);
                                                    ChBaySuffix = "CH" + det.CompNo.ToString("D2") + "_B" + string.Format("{0:00}", det.BayID);
                                                }
                                            }
                                            <div class="prod-detail prod_@ArmNo">
                                                <div class="prod-heading">Arm @ArmNo</div>
                                                <div class="col-lg-7">
                                                    <div class="batch-cont-detail BC_MSG_@BayArmSuffix"></div>
                                                </div>
                                                <div class="col-lg-5 no-padd">
                                                    <div class="col-lg-12 odd-row bc-fill-status">Preset: <span class="float-r">@Preset</span></div>
                                                    <div class="col-lg-12 even-row bc-fill-status">Filled: <span class="float-r QTY_ACC_@ChBaySuffix">@FillQty</span></div>
                                                    <div class="col-lg-12 odd-row bc-fill-status">Rem: <span class="float-r QTY_REM_@ChBaySuffix">@Remaining</span></div>
                                                </div>

                                            </div>
                                            if (ViewSteps)
                                            { <div class="batch-cont-temp-text batch-cont-temp-text_@ArmNo LP_ACTION_@BayArmSuffix"></div>}
                                            else
                                            {<div class="batch-cont-temp-text batch-cont-temp-text_@ArmNo LP_ACTION"></div> }
                                        }
                                    </div>
                                    <div class="bay-head text-center">
                                        BATCH CONTROLLER
                                        <div class="batch-cont-action-icon">
                                            <span title="" data-tooltip-attr="LOCREM" class="tooltips batch-cont-icons control-icon LOCREM_@BCSuffix" onclick="OpenBayLOCREMModal('@BCSuffix', 'BAY_LOCREM', 'LOCREM_@BCSuffix', '@BayBCs.FirstOrDefault().BCNo' , '@Session[clsConstants.UserID]', '@Session[clsConstants.LoginID]', '@Session[clsConstants.UserName]'); cancelBubble(event);" data-opcvalue="False"></span>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        }
                        else
                        {
                            foreach (tblBatchController BC in BayBCs)
                            {
                                string BCSuff = "BC" + string.Format("{0:00}", BC.SlaveID);
                                byte iArmNo = (BC.tblLoadingPointMasters.FirstOrDefault().ArmNo ?? 0);
                                string ArmNo = string.Format("{0:00 }", iArmNo);
                                string BayArmSuffix = "B" + string.Format("{0:00}", BC.tblLoadingPointMasters.FirstOrDefault().BayID) + "_A" + string.Format("{0:00}", ArmNo);
                                double Preset = 0; double FillQty = 0; double Remaining = 0;
                                string ChBaySuffix = "";
                                if (loadDetailData != null)
                                {
                                    tblLoadDetail det = loadDetailData.Where(x => x.tblLoadingPointMaster.ArmNo == iArmNo && ((x.LoadStatus ?? 0) != 1 && (x.LoadStatus ?? 0) != 4)).OrderByDescending(x => x.LoadingStartTime ?? (new DateTime(9999, 12, 31))).FirstOrDefault();
                                    if (det != null) {
                                        Preset = (det.PresetQty ?? 0) + (det.SamplingQty ?? 0) - (det.PrevBaseQty ?? 0) - (det.PrevBlendQty ?? 0);
                                        FillQty = ((det.BaseProdQtyGrs ?? 0) + (det.EthBlendingQtyGrs ?? 0));
                                        Remaining = (Preset - FillQty);
                                        ChBaySuffix = "CH" + det.CompNo.ToString("D2") + "_B" + string.Format("{0:00}", det.BayID);
                                    }
                                }
                                <div class="batch-controller-box box-small">
                                    <div class="bay-cont">
                                        <div class="batch-cont-row">
                                            <div class="arm-col-left">
                                                <label>Primary</label>
                                                <div class="val">
                                                    <span class="circle-cont">
                                                        <span class="@(BC.TagPrefix+"_CONN01") status_bad"></span>
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="arm-col-right">
                                                <label>Secondary</label>
                                                <div class="val">
                                                    <span class="circle-cont">
                                                        <span class="@(BC.TagPrefix+"_CONN02") status_bad"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="batch-controller-bg M_@BC.BCMakes.Value.ToString("D2") Q_@BayBCs.Count().ToString("D2")">
                                            <div class="prod-detail">
                                                <div class="col-lg-12 no-padd">
                                                    <div class="batch-cont-detail BC_MSG_@BayArmSuffix">?</div>
                                                </div>
                                            </div>
                                            <div class="prod-detail align-bottom">
                                                <div class="col-lg-12 no-padd">
                                                    <div class="col-lg-12 padd-l-10 no-padd-right odd-row">Preset: <span class="float-r">@Preset</span></div>
                                                    <div class="col-lg-12 padd-l-10 no-padd-right even-row">Filled: <span class="float-r QTY_ACC_@ChBaySuffix">@FillQty</span></div>
                                                    <div class="col-lg-12 padd-l-10 no-padd-right odd-row">Rem: <span class="float-r QTY_REM_@ChBaySuffix">@Remaining</span></div>
                                                </div>
                                            </div>
                                            @if (ViewSteps)
                                            { <div class="batch-cont-temp-text batch-cont-temp-text_@ArmNo LP_ACTION_@BayArmSuffix"></div>}
                                            else
                                            {<div class="batch-cont-temp-text batch-cont-temp-text_@ArmNo LP_ACTION"></div> }

                                        </div>
                                        <div class="bay-head text-center">
                                            BATCH CONTROLLER
                                            <div class="batch-cont-action-icon">
                                                <span title="" data-tooltip-attr="LOCREM" class="tooltips batch-cont-icons control-icon LOCREM_@BCSuff" onclick="OpenBayLOCREMModal('@BCSuff', 'BAY_LOCREM', 'LOCREM_@BCSuff', '@BayBCs.FirstOrDefault().BCNo' , '@Session[clsConstants.UserID]', '@Session[clsConstants.LoginID]', '@Session[clsConstants.UserName]'); cancelBubble(event);" data-opcvalue="False"></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    
                    <div class="col-lg-2 col-sm-2 col-md-2 bay-push-box">

                       <!-- <div class="bay-cont">
                            <div class="bay-head text-center">RIT ARM 2</div>
                            <div class="rit-bg">
                                <div class="rit-box-container">
                                    <span class="rit-start">
                                        <span class="rit_start_0 RIT_START_A02"></span>
                                        <span class="rit-btn-lbl">START</span>
                                    </span>
                                    <span class="rit-ack">
                                        <span class="rit_ack_0 RIT_ACK_A02"></span>
                                        <span class="rit-btn-lbl">ACK</span>
                                    </span>

                                        <div class="rit-stop">
                                            <span class="rit_stop_0 RIT_STOP_A02"></span>
                                            <span class="rit-btn-lbl stop">STOP</span>
                                        </div>
                                    </div>
                                </div>
                            </div>-->
                        <div class="bay-cont">
                            
                            <div class="bay-push-bg">
                                <div class="bay-push-box-container">
                                    <span class="bay-push-start">
                                        <span class="BATT_CUTOFF_@BayId"></span>
                                        <span class="bay-push-btn-lbl">BATT</span>
                                    </span>
                                    <span class="bay-push-ack">
                                        <span class="HAND_BRAKE_@BayId"></span>
                                        <span class="bay-push-btn-lbl">HBR</span>
                                    </span>

                                    <div class="bay-push-stop">
                                        <span class="FIRE_EXT_@BayId"></span>
                                        <span class="bay-push-btn-lbl stop">EXTG</span>
                                    </div>
                                </div>
                            </div>
                            <div class="bay-head text-center">BAY PBS</div>
                        </div> 
                    </div>
                </div>
                <div id="dvTruckDetails" class="col-lg-6 col-sm-6 col-md-6">
                    <div id="bayTruck" class="bay-truck @CustName @Application pull-right" style="@visibility">
                        <div class="bay-truck-fill-container">
                            @if (loadDetailData != null)
                            {
                                <div class="bay-truck-info">
                                    @foreach (tblLoadDetail loadDetail in loadDetailData)
                                    {
                                        CompWidth = Convert.ToDouble(width * loadDetail.PresetQty) + 1;
                                        string ChBaySuffix = "CH" + loadDetail.CompNo.ToString("D2") + "_B" + string.Format("{0:00}", loadDetail.BayID);
                                        double PreviousQty = ((loadDetail.PrevBaseQty ?? 0) + (loadDetail.PrevBlendQty ?? 0));
                                        double Filled = ((loadDetail.BaseProdQtyGrs ?? 0) + (loadDetail.EthBlendingQtyGrs ?? 0));

                                        <div class="box" style="width:@CompWidth%;" id="chamber_@loadDetail.CompNo">
                                            <div class="fill fill_@ChBaySuffix" style="background-color: @loadDetail.tblProduct.ProductColor ; height:@(((PreviousQty+Filled) / loadDetail.PresetQty) * 100)%;"></div>
                                            <div class="hsd-ltr text-center"><strong>@loadDetail.tblProduct.ProdNameShort</strong></div>
                                            <div class="hsd-ltr text-center"><strong class="EFF_QTY_ACC_@ChBaySuffix" id="EFF_QTY_ACC_@ChBaySuffix">@(Filled)</strong></div>
                                            <div class="hsd-ltr text-center"><strong>@(loadDetail.PresetQty - PreviousQty)</strong></div>
                                            <div class="hsd-ltr text-center"><strong><span class="percentage" data-id="@ChBaySuffix"></span></strong></div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="truck-fill-wrapper" id="truckFillWrapper"></div>
                                <div class="bay-truck-fill" style="height:0%; background-color:@Prodcolor;"></div>

                                <table class="bay-truck-fill-tbl">
                                    <tr>
                                        <td><span class="PRODUCT_NAME"></span></td>
                                        <td><span class="percentage" data-id=""></span></td>
                                    </tr>
                                </table>
                            }
                        </div>
                        <div class="er ER_@BayId">
                            <span class="earth-baseline one"></span>
                            <span class="earth-baseline two"></span>
                            <span class="earth-baseline three"></span>
                        </div>
                    </div>
                    <table class="detail-tbl" style="width:95%">
                        <tbody>
                            <tr>
                                <td class="bay-lbl" style="width:14%"><span class="">TRUCK NO.</span></td>
                                <td class="bay-val" style="width:20%"><span id="TRUCK_NO_@BayId">@(loadDetailData != null ? mast.tblTruckMaster.TruckNumber : string.Empty)</span></td>
                                <td class="bay-lbl" style="width:14%"><span class="">FAN NO.</span></td>
                                <td class="bay-val" style="width:20%"><span id="FAN_NO_@BayId">@(loadDetailData != null ? FAN_No : string.Empty)</span></td>
                                <td class="bay-lbl" style="width:15%"><span class="">CARD NO.</span></td>
                                <td class="bay-val" style="width:17%">
                                    <input id="spnCardNumber" type="number" min=1 readonly class="editable-input CARD_NO_@BayId" ondblclick="this.readOnly='';" onkeyup="updateGlyphButton('CARD_NO_@BayId','GLYPH_@BayId')" onfocus="updateGlyphButton('CARD_NO_@BayId','GLYPH_@BayId')"
                                           style="border: 0px;width: 75%;" value="@(loadDetailData != null ? mast.tblCard.CardNumber.ToString() : string.Empty)">
                                    <span class="glyphicon glyphicon-upload hide" id="@("GLYPH_"+BayId)" onclick="SetBayCardNo('Force Card No on Bay','Force Bay Card No at @BayId','CARD_NO_@BayId','@BayNo','@Session[clsConstants.UserID]')" aria-hidden="true"></span>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row hidden-lg hidden-md">
    Test in mobile
</div>

<div class="modal fade" id="BayLOCREMModal" tabindex="-1" role="dialog" aria-labelledby="ModeChangeModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="true" draggable="false">
    <div class="modal-dialog mode-control-modal">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3 class="modal-title" id="LocRemLabel">Change Mode</h3>
            </div>
            <div class="modal-body">
                <div id="dvChangeMode" class="automanual-popup">
                    <span id="hdnLOCREMMode" data-opcvalue="" class="" style="display:none;"></span>
                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Current Mode</th>
                                <th>New Mode</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    <div class="relative">
                                        <span class="control-icon BAY_LOCREM"></span>
                                    </div>
                                    <div class="mode-lbl remotemode BAY_LOCREM" data-opcvalue="True">
                                        REMOTE MODE
                                        <span class="mode-lbl-subtxt">Remote Operation from PC</span>
                                    </div>
                                    <div class="mode-lbl localmode BAY_LOCREM" data-opcvalue="True">
                                        LOCAL MODE
                                        <span class="mode-lbl-subtxt">Locally operated from Equipment</span>
                                    </div>
                                </td>
                                <td>
                                    <div class="relative">
                                        <span class="control-icon BAY_LOCREM new-mode"></span>
                                    </div>
                                    <div class="mode-lbl remotemode BAY_LOCREM new-mode" data-opcvalue="True">
                                        REMOTE MODE
                                        <span class="mode-lbl-subtxt">Remote Operation from PC</span>
                                    </div>
                                    <div class="mode-lbl localmode BAY_LOCREM new-mode" data-opcvalue="True">
                                        LOCAL MODE
                                        <span class="mode-lbl-subtxt">Locally operated from Equipment</span>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnModeChangeOK">Set</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<script>
    opcPageName = '@String.Join(",",lstOtherPages)'+',';
</script>
<script src="~/Scripts/PageJS/PlantView/BayView/0400/BayView.js"></script>
