@using TOAST.Shared;
@using TOAST.Business;
@using TOAST.Data.Model;

@model List<tblLoadingPointMaster>
@{
    ViewBag.Title = "Plant View - Bay View";
    Layout = null; string strFlowUnits = "";
    byte BayNo = Model.Select(o => o.BayID).FirstOrDefault() ?? 0;
    string visibility = "visibility: hidden;"; bool blnWeightBased = false;
    List<byte> Arms = Model.Select(x => x.ArmNo ?? 0).Distinct().ToList();
    string strBPBS = ((Model.Any(x => x.tblBaysMaster.IsBPBSBypassed == false) && Arms.Count() < 2) ? "block" : "none");
    string strRIT = (ViewBag.IsRITAvailable == false ? "RIT_0" : "RIT_" + Arms.Count());

    string BayId = "B" + BayNo.ToString("D2");
    string Prodcolor = "#808080";
    double PresetQtySum = 0, filledQtySum = 0;
    List<tblLoadDetail> loadDetailData = ViewBag.loadDetailData;
    List<tblMeterMaster> meterMasterData = ViewBag.meterMasterData;
    List<tblBatchController> BayBCs = ViewBag.BatchControllerData;
    List<tblMeterMaster> AdditiveMeters = ViewBag.AdditiveMeters;
    tblLoadMaster mast = ((loadDetailData == null) ? null : loadDetailData.FirstOrDefault().tblLoadMaster);
    List<tblBatchSetup> Batches = ((mast == null) ? null : mast.tblBatchSetups.ToList());
    string BCSuffix = Model.FirstOrDefault().tblBatchController.TagPrefix;
    string strLOCREMTag = BCSuffix + "_LOCREM";
    bool ViewSteps = Convert.ToBoolean(ViewBag.StepDetail);
    double CompWidth = 0, total = 0, width = 0;
    string FAN_No = (mast == null ? "" : mast.FANSlipNo ?? "");
    if (loadDetailData != null)
    {
        IEnumerable<int> lstWghtUOMs = Enum.GetValues(typeof(ConvUnit.Mass)).Cast<int>();
        blnWeightBased = loadDetailData.All(x => lstWghtUOMs.Contains(x.tblProduct.UomID));
        if (blnWeightBased) { strFlowUnits = "kg/m"; } else { strFlowUnits = "lpm"; }
        visibility = "";
        int NoOfComps = loadDetailData.Count();
        foreach (tblLoadDetail loadDetail in loadDetailData)
        {
            total += Convert.ToDouble(loadDetail.PresetQty);
        }
        width = (99 - NoOfComps) / (total == 0 ? (99 - NoOfComps) : total);
    }
    string ProjNo = clsConfig.ProjPath;
    string CustName = clsConfig.CustomerName;
    string Application = clsConfig.Application;
    if (ProjNo == "" || ProjNo == "0394") { strLOCREMTag = "LOCREM_" + BCSuffix; }
    List<string> lstOtherPages = ViewBag.lstMtrPages;
}


<style type="text/css">
    .container {
        background-color: #f7f4e6;
        border: thin solid #808080;
        padding: 20px;
        margin: 20px;
    }
</style>

<div class="row hidden-sm hidden-md hidden-xs">
    <div class="bay-view-main-container">
        <div class="bay-view-wrapper">
            <div class="row bay-view-top">
                <div class="col-lg-12">
                    <div class="pipe-container pipe-container-new">
                        @foreach (tblMeterMaster Mtr in meterMasterData)
                        {
                            byte BayNum = (Mtr.tblLoadingPointMaster.BayID ?? 0);
                            byte ArmNum = (Mtr.tblLoadingPointMaster.ArmNo ?? 0);
                            string BayArmSuffix = "B" + string.Format("{0:00}", Convert.ToInt32(BayNum)) + "_A" + string.Format("{0:00}", Convert.ToInt32(ArmNum));
                            string CompSuffix = "CN" + string.Format("{0:00}", Convert.ToInt32(Mtr.MeterCompNo)) + "_" + BayArmSuffix;
                            short HeaderNo = 0; string ProductName = ""; string ChColor = "#ccc"; tblBatchSetup Batch = null; tblLoadDetail Detail = null;
                            if (Batches != null)
                            {
                                Batch = Batches.Where(x => x.LoadingPointNo == Mtr.LPNo).FirstOrDefault();
                                if (Batch != null)
                                {
                                    Detail = loadDetailData.Where(x => x.LoadID == (Batch.LoadID ?? 0) && x.CompNo == (Batch.CompNo ?? 0)).FirstOrDefault();
                                }
                            }

                            if (Detail == null) { ChColor = Mtr.tblProduct.ProductColor; } else { ChColor = Detail.tblProduct.ProductColor; }
                            {
                                HeaderNo = Mtr.tblProduct.HeaderNo ?? 0;
                                ProductName = Mtr.tblProduct.ProdNameShort;
                                //tblLoadDetail det = (loadDetailData ?? new List<tblLoadDetail>()).Where(x => x.LoadingPointNo == Mtr.LPNo && ((x.LoadStatus ?? 0) != 1 && (x.LoadStatus ?? 0) != 4)).OrderBy(x => x.CompNo).ThenByDescending(x => x.LoadingStartTime ?? (new DateTime(9999, 12, 31))).FirstOrDefault();
                                //ProductName = (det == null ? "" : det.tblProduct.ProdNameShort);
                            }
                            string HdrSuffix = "HDR" + string.Format("{0:00}", Convert.ToInt32(HeaderNo));
                            string meterNo = @ArmNum + "_" + Mtr.MeterCompNo;
                            <div class="pipe pipe_@meterNo" style="background-color: @Mtr.tblProduct.ProductColor">
                                <span id="@BayArmSuffix" class="CURR_CHAMBER_@BayArmSuffix" style="display:none"></span>
                                <input type="hidden" id="chamber_to_go_@meterNo" class="chamber_to_go" value="@((Batch==null)?0:Batch.CompNo)" />
                                <span class="chamber_to_go" style="display:none">@ArmNum</span>
                                <span class="mbv1" style="display:none"></span>
                                <span class="strainer">
                                    <span class="pipe-data one tooltips get-hover" style="font-size: 18px;top: 0px;" onclick="OpenChartModal('@Mtr.ObsDensTag','')" title="Observed Density"><strong class="@Mtr.ObsDensTag"> </strong> kg/m³</span>
                                    <span class="pipe-data two tooltips get-hover" style="font-size: 18px;bottom:@(Mtr.MeterCompNo>1?"0px;":"8px;")" onclick="OpenChartModal('@Mtr.StdDensTag','')" title="Density at 15°C"><strong class="@Mtr.StdDensTag"> </strong> kg/m³</span>
                                </span>
                                <div class="mfm-block">
                                    <span class="mfm @Mtr.tblMeterMake.Make.ToLower() @Mtr.tblMeterMake.Model.ToLower() clickable" onclick="OpenMFMModal(0,@Mtr.MeterID,'@Mtr.PageName')">
                                        <span class="pipe-data mfm-name" style="color: @Mtr.tblProduct.ProductColor"><strong>@ProductName</strong></span>
                                    </span>
                                    @*<span class="pipe-data tooltips get-hover mfm-flwrate" title="MFM Flow Rate" onclick="OpenChartModal('MFM_MASS_FLWRATE_@CompSuffix','')"><strong class="MFM_MASS_FLWRATE_@CompSuffix"> </strong> @clsConfig.FlowRateUnit</span>
                                        <span class="pipe-data tooltips get-hover mfm-temp" title="MFM Temp" onclick="OpenChartModal('MFM_TEMP_@CompSuffix','')"><strong class="MFM_TEMP_@CompSuffix"> </strong> °C</span>*@
                                </div>
                                <span class="rtd">
                                    <span class="pipe-data tooltips get-hover" style="font-size: 18px;left:@(Mtr.MeterCompNo>1?"35px;":"45px;");bottom: @(Mtr.MeterCompNo>1?"23px;":"36px;");" onclick="OpenChartModal('@Mtr.ObsTempTag','')" title="Observed Temp"><strong class="@Mtr.ObsTempTag"> </strong> °C</span>
                                </span>
                                <span class="arm-txt"></span>
                                <span class="dcv">
                                    <span class="pipe-data tooltips get-hover" style="font-size: 18px; left: 115px; top: 25px;" onclick="OpenChartModal('BC_FLOWRATE_@CompSuffix','')" title="BC Flow Rate"><strong class="BC_FLOWRATE_@CompSuffix"> </strong> @strFlowUnits</span>
                                </span>
                                <span class="mbv" style="display:none"></span>
                                <div class="multipleBay">
                                    <div class="valve-detail-1 valve-detail">
                                        <span>
                                            Arm: <strong>@(string.Format("{0:00}", Convert.ToInt32(ArmNum))) </strong>
                                            Mtr: <strong>@(string.Format("{0:00}", Convert.ToInt32(Mtr.MeterCompNo))) </strong>
                                        </span>
                                        <span class="prod tooltips get-hover" style="font-size: 18px;right: 35px;top: -40px;" onclick="OpenChartModal('@Mtr.ObsPressureTag','')" title="Header Pressure"><strong class="@Mtr.ObsPressureTag"> </strong> kg/cm²</span>
                                    </div>
                                </div>
                                @if (Mtr.MeterCompNo == 1)
                                {
                                    <div class="pipe-extension pipe_ext_@ArmNum LAPS_@BayArmSuffix" style="background-color: @ChColor">
                                        <div class="pipe-extension-down pipe_ext_down_@ArmNum" style="background-color: @ChColor"></div>
                                    </div>
                                    tblMeterMaster Addtv = AdditiveMeters.Where(x => x.LPNo == Mtr.LPNo).FirstOrDefault();
                                    if (Addtv != null)
                                    {
                                        <div class="pipe-joiner joiner2" style="background-color: @Mtr.tblProduct.ProductColor">
                                            <div class="h_pipe" style="background-color: @Mtr.tblProduct.ProductColor">
                                                <span class="Additive">@Addtv.tblAdditivesMaster.AdditiveName</span>
                                            </div>
                                        </div>
                                    }
                                }
                                <div class="pipe-joiner" style="background-color: @Mtr.tblProduct.ProductColor"></div>
                            </div>
                        }

                        <div class="pipe-block pipe_block_1" style="display: none;">
                            <span class="mbv1"></span>
                            <span class="strainer"></span>
                            <div class="mass-flow-meter"></div>
                            <span class="rtd"></span>
                            <span class="arm-txt"></span>
                            <span class="dcv"></span>
                            <span class="mbv"></span>
                        </div>
                        @{
                            string showPrevQty = "hide"; string showBlendQty = "hide"; string showAddQty = "hide";
                            if (loadDetailData != null && loadDetailData.Count() > 0)
                            {
                                if (loadDetailData.Any(x => (x.PrevBaseQty ?? 0) > 0)) { showPrevQty = ""; }
                                if (mast.tblLoadDetailComponents.Where(x => x.ComponentID > 1).Count() > 0) { showBlendQty = ""; }
                                if (mast.tblLoadDetails.Any(x => x.tblProduct.tblProductAdditiveMaps.Count() > 0)) { showAddQty = ""; }
                            }
                        }

                        <div class="batch-controller-detail-container bcd-cont" id="bayBatchDetail">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Comp</th>
                                        <th>Arm</th>
                                        <th>Product</th>
                                        <th>Preset</th>
                                        <th style="display:none;">EffPreset</th>
                                        <th class="@showPrevQty">Prev</th>
                                        <th style="display:none;">BaseDBVal</th>
                                        <th>Base</th>
                                        <th style="display:none;">BlendDBVal</th>
                                        <th class="@showBlendQty">Blend</th>
                                        <th class="@showAddQty">Add</th>
                                        <th>Filled</th>
                                        <th>Status</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (tblLoadDetail itm in loadDetailData ?? Enumerable.Empty<tblLoadDetail>())
                                    {
                                        tblLoadingPointMaster LPMast = itm.tblLoadingPointMaster;
                                        double PrevQty = ((itm.PrevBaseQty ?? 0) + (itm.PrevBlendQty ?? 0));
                                        double Filled = ((itm.BaseProdQtyGrs ?? 0) + (itm.EthBlendingQtyGrs ?? 0));

                                        string ChBaySuffix = "CH" + @itm.CompNo.ToString("D2") + "_B" + string.Format("{0:00}", Convert.ToInt32(itm.BayID));
                                        string BayArmSuffix = "B" + string.Format("{0:00}", Convert.ToInt32(itm.BayID)) + "_A" + string.Format("{0:00}", Convert.ToInt32(itm.tblLoadingPointMaster.ArmNo));
                                        <tr class="load-status_@itm.LoadStatus">
                                            <td style="display:none;">
                                                @if (itm.LoadStatus == 2)
                                                {
                                                    <input type="hidden" class="active_CURR_CHAMBER_@BayArmSuffix" value="@itm.CompNo" />
                                                }
                                            </td>
                                            <td class="text-center">@itm.CompNo</td>
                                            <td class="text-center">@itm.tblLoadingPointMaster.ArmNo</td>
                                            <td>@itm.tblProduct.ProdNameShort</td>
                                            <td class="PresetQty_@ChBaySuffix">@(itm.PresetQty + (itm.SamplingQty ?? 0))</td>
                                            <td style="display:none;" class="Eff_PresetQty_@ChBaySuffix">@((itm.PresetQty ?? 0) + (itm.SamplingQty ?? 0) - PrevQty)</td>
                                            <td class="@showPrevQty QTY_ACC_PREV_@ChBaySuffix">@PrevQty</td>
                                            <td style="display:none;" class="DB_QTY_CN01_@ChBaySuffix">@((itm.BaseProdQtyGrs ?? 0))</td>
                                            <td class="QTY_CN01_@ChBaySuffix">@((itm.BaseProdQtyGrs ?? 0))</td>
                                            <td style="display:none;" class="DB_QTY_CN02_@ChBaySuffix">@((itm.EthBlendingQtyGrs ?? 0))</td>
                                            <td class="@showBlendQty QTY_CN02_@ChBaySuffix">@((itm.EthBlendingQtyGrs ?? 0))</td>
                                            <td class="@showAddQty QTY_ADD_@ChBaySuffix">@((itm.AdditiveQty1 ?? 0) + (itm.AdditiveQty2 ?? 0) + (itm.AdditiveQty3 ?? 0))</td>
                                            @*<td style="display:none;" class="QTY_ACC_PREV_@ChBaySuffix">@PrevQty</td>*@
                                            <td class="EFF_QTY_ACC_@ChBaySuffix">@(Filled)</td>
                                            <td>@((itm.LoadStatus == null || itm.tblLoadStatu == null) ? "?" : itm.tblLoadStatu.LoadStatusDesc)</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            <input type="hidden" id="PresetQtySum" value="@PresetQtySum" />
                            <input type="hidden" id="filledQtySum" value="@filledQtySum" />
                        </div>

                        @* New Interlock Box *@
                        <div class="bay-cont interlock-box first">
                            <table class="table-striped value-tbl status-tbl w-100">
                                <thead>
                                    <tr>
                                        <th class="text-center bg-color">Interlock</th>
                                        <th class="text-center bg-color">Status</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="tbl-lbl">Earth</td>
                                        <td class="tbl-val" style="min-width: 30px;">
                                            <span class="circle-cont-sm alert-cont-sm">
                                                <span class="ER_@BayId"></span>
                                            </span>
                                        </td>
                                    </tr>
                                    <tr>
                                        <td class="tbl-lbl">ESD</td>
                                        <td class="tbl-val" style="min-width: 30px;">
                                            <span class="circle-cont-sm alert-cont-sm">
                                                <span class="@(BCSuffix+"_ESD")"></span>
                                            </span>
                                        </td>
                                    </tr>
                                    @if (Model.Any(x => x.tblBaysMaster.IsOverspillBypassed == false))
                                    {
                                        <tr>
                                            <td class="tbl-lbl">OverSpill</td>
                                            <td class="tbl-val" style="min-width: 30px;">
                                                <span class="circle-cont-sm alert-cont-sm">
                                                    <span class="OVSP_@BayId"></span>
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                    @if (Model.Any(x => x.tblBaysMaster.IsVRUArmBypassed == false))
                                    {
                                        <tr>
                                            <td class="tbl-lbl">VRU Arm</td>
                                            <td class="tbl-val" style="min-width: 30px;">
                                                <span class="circle-cont-sm alert-cont-sm">
                                                    <span class="VRU_@BayId"></span>
                                                </span>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <div class="bay-cont interlock-box second">
                            <table class="table-striped value-tbl status-tbl w-100">
                                <thead>
                                    <tr>
                                        <th class="bg-color text-center">Arms</th>
                                        @foreach (tblLoadingPointMaster Arm in Model)
                                        {
                                            int Colsp = (int)Math.Floor((double)2 / Model.Count);
                                            if (Arm.ArmNo == 1) { Colsp = (int)Math.Ceiling((double)2 / Model.Count); }
                                            <th class="bg-color text-center" colspan="@Colsp">@string.Format("{0:00}", Arm.ArmNo)</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td class="tbl-lbl">Pump Demand</td>
                                        @foreach (tblLoadingPointMaster Arm in Model)
                                        {
                                            string BayArmSuffix = "B" + string.Format("{0:00}", Arm.BayID) + "_A" + string.Format("{0:00}", Arm.ArmNo);
                                            <td class="tbl-val" colspan="@((int)Math.Ceiling((double)2/Model.Count))">
                                                <span class="circle-cont-sm alert-cont-sm">
                                                    <span class="PD_CN01_@BayArmSuffix"></span>
                                                </span>
                                            </td>
                                        }
                                    </tr>
                                    @if (Model.Any(x => x.IsLAPSBypassed == false))
                                    {
                                        <tr>
                                            <td class="tbl-lbl">LAPS</td>
                                            @foreach (tblLoadingPointMaster Arm in Model)
                                            {
                                                string BayArmSuffix = "B" + string.Format("{0:00}", Arm.BayID) + "_A" + string.Format("{0:00}", Arm.ArmNo);
                                                <td class="tbl-val" colspan="@((int)Math.Ceiling((double)2/Model.Count))">
                                                    <span class="circle-cont-sm alert-cont-sm">
                                                        <span class="LAPS_@BayArmSuffix"></span>
                                                    </span>
                                                </td>
                                            }
                                        </tr>
                                    }
                                    @*<tr>
            <td class="tbl-lbl">RIT Stop</td>
            @foreach (tblLoadingPointMaster Arm in Model)
            {
                string BayArmSuffix = "B" + string.Format("{0:00}", Arm.BayID) + "_A" + string.Format("{0:00}", Arm.ArmNo);
                <td class="tbl-val" colspan="@((int)Math.Ceiling((double)2/Model.Count))">
                    <span class="circle-cont-sm alert-cont-sm">
                        <span class="STOP_PB_@BayArmSuffix"></span>
                    </span>
                </td>
            }
        </tr>*@
                                    <tr>
                                        <td class="tbl-lbl">Remote Stop</td>
                                        @foreach (tblLoadingPointMaster Arm in Model)
                                        {
                                            string BayArmSuffix = "B" + string.Format("{0:00}", Arm.BayID) + "_A" + string.Format("{0:00}", Arm.ArmNo);
                                            string BayArmDetail = "BC: " + Arm.tblBatchController.BCName + "; Bay: " + string.Format("{0:00}", Arm.BayID) + "; Arm: " + string.Format("{0:00}", Arm.ArmNo);

                                            <td class="tbl-val" colspan="@((int)Math.Ceiling((double)2/Model.Count))">
                                                <span class="action-btn-row">
                                                    <a class="push-btn-01 REM_STOP_@BayArmSuffix" href="javascript:void(0);" onclick="RemoteStopNew('Remote Stop @BayArmDetail', this, 'REM_STOP_@BayArmSuffix','@Arm.LoadingPointNo','@Session[clsConstants.UserID]','@Session[clsConstants.LoginID]','@Session[clsConstants.UserName]')" data-opcvalue="">
                                                        <i class="fa fas fa-thumbtack" style="vertical-align: text-top;" aria-hidden="true"></i>
                                                    </a>
                                                </span>
                                            </td>
                                        }
                                    </tr>
                                    <tr>
                                        <td class="tbl-lbl">Ack Alarm</td>
                                        @foreach (tblLoadingPointMaster Arm in Model)
                                        {
                                            string BayArmSuffix = "B" + string.Format("{0:00}", Arm.BayID) + "_A" + string.Format("{0:00}", Arm.ArmNo);
                                            string BayArmDetail = "BC: " + Arm.tblBatchController.BCName + "; Bay: " + string.Format("{0:00}", Arm.BayID) + "; Arm: " + string.Format("{0:00}", Arm.ArmNo);

                                            <td class="tbl-val" colspan="@((int)Math.Ceiling((double)2/Model.Count))">
                                                <span class="action-btn-row">
                                                    <a class="push-btn-01 ACK_ALARM_@BayArmSuffix" href="javascript:void(0);" onclick="AckAlarmNew('Acknowledge Alarm @BayArmDetail', this, 'ACK_ALARM_@BayArmSuffix','@Arm.LoadingPointNo')" data-opcvalue="">
                                                        <i class="fas fa-check" style="vertical-align: text-top;" aria-hidden="true"></i>
                                                    </a>
                                                </span>
                                            </td>
                                        }
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="col-lg-2">
                </div>
            </div>


            <!-- second row -->
            <div class="row bay-view-bottom" style="top:35px">
                <div class="col-lg-6 col-sm-6 col-md-6">
                    @foreach (tblLoadingPointMaster Arm in Model)
                    {
                        string BayArmSuffix = "B" + string.Format("{0:00}", Arm.BayID) + "_A" + string.Format("{0:00}", Arm.ArmNo);
                        string ArmNo = string.Format("{0:00 }", Arm.ArmNo);
                        <div class="col-lg-2 col-sm-2 col-md-2 rit-box @strRIT">
                            <div class="bay-cont">

                                <div class="rit-bg">
                                    <div class="rit-box-container">
                                        <span class="rit-start">
                                            <span class="rit_start_bad RIT_START_@BayArmSuffix"></span>
                                            <span class="rit-btn-lbl">START</span>
                                        </span>
                                        <span class="rit-ack">
                                            <span class="rit_ack_bad RIT_ACK_@BayArmSuffix"></span>
                                            <span class="rit-btn-lbl">ACK</span>
                                        </span>

                                        <div class="rit-stop">
                                            <span class="rit_stop_bad RIT_STOP_@BayArmSuffix"></span>
                                            <span class="rit-btn-lbl stop">STOP</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="bay-head text-center">RIT ARM @ArmNo</div>
                            </div>
                        </div>
                    }
                    <div id="dvbatchControllerBox">
                        @if (BayBCs.Count() == 1)
                        {
                            <div class="col-lg-5 col-sm-5 col-md-5 batch-controller-box">
                                <div class="bay-cont">
                                    <div class="batch-cont-row">
                                        <div class="arm-col-left">
                                            <label>Primary Connection</label>
                                            <div class="val">
                                                <span class="circle-cont">
                                                    <span class="@(Model.FirstOrDefault().tblBatchController.TagPrefix+"_CONN01")"></span>
                                                    @*<span class="BC_CONN01_@BCSuffix status_bad"></span>*@
                                                </span>
                                            </div>
                                        </div>
                                        <div class="arm-col-right">
                                            <label>Secondary Connection</label>
                                            <div class="val">
                                                <span class="circle-cont">
                                                    <span class="@(Model.FirstOrDefault().tblBatchController.TagPrefix+"_CONN02")"></span>
                                                    @*<span class="BC_CONN02_@BCSuffix status_bad"></span>*@
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="batch-controller-bg M_@BayBCs.FirstOrDefault().BCMakes.Value.ToString("D2") Q_@BayBCs.Count().ToString("D2")">
                                        @foreach (tblLoadingPointMaster Arm in Model)
                                        {
                                            string ArmNo = string.Format("{0:00 }", Arm.ArmNo);
                                            string BayArmSuffix = "B" + string.Format("{0:00}", Arm.BayID) + "_A" + string.Format("{0:00}", Arm.ArmNo);
                                            double Preset = 0; double FillQty = 0; double Remaining = 0;
                                            string ChBaySuffix = "";
                                            if (loadDetailData != null)
                                            {
                                                tblLoadDetail det = loadDetailData.Where(x => x.tblLoadingPointMaster.ArmNo == Arm.ArmNo && ((x.LoadStatus ?? 0) != 1 && (x.LoadStatus ?? 0) != 4)).OrderByDescending(x => x.LoadingStartTime ?? (new DateTime(9999, 12, 31))).FirstOrDefault();
                                                if (det != null)
                                                {
                                                    Preset = (det.PresetQty ?? 0) + (det.SamplingQty ?? 0) - (det.PrevBaseQty ?? 0) - (det.PrevBlendQty ?? 0);
                                                    FillQty = ((det.BaseProdQtyGrs ?? 0) + (det.EthBlendingQtyGrs ?? 0));
                                                    Remaining = (Preset - FillQty);
                                                    ChBaySuffix = "CH" + det.CompNo.ToString("D2") + "_B" + string.Format("{0:00}", det.BayID);
                                                }
                                            }
                                            <div class="prod-detail prod_@ArmNo">
                                                <div class="prod-heading">Arm @ArmNo</div>
                                                <div class="col-lg-7" style="padding-right: 5px;">
                                                    <div class="batch-cont-detail BC_MSG_@BayArmSuffix"></div>
                                                </div>
                                                <div class="col-lg-5 no-padd">
                                                    <div class="col-lg-12 odd-row bc-fill-status">Preset: <span class="float-r">@Preset</span></div>
                                                    <div class="col-lg-12 even-row bc-fill-status">Filled: <span class="float-r QTY_ACC_@ChBaySuffix">@FillQty</span></div>
                                                    <div class="col-lg-12 odd-row bc-fill-status">Rem: <span class="float-r QTY_REM_@ChBaySuffix">@Remaining</span></div>
                                                </div>

                                            </div>
                                            if (ViewSteps)
                                            { <div class="batch-cont-temp-text batch-cont-temp-text_@ArmNo LP_ACTION_@BayArmSuffix"></div>}
                                            else
                                            {<div class="batch-cont-temp-text batch-cont-temp-text_@ArmNo LP_ACTION"></div>}
                                        }
                                    </div>
                                    <div class="bay-head text-center">
                                        @BayBCs.FirstOrDefault().BCName
                                        <div class="batch-cont-action-icon">
                                            <span title="" data-tooltip-attr="LOCREM" class="tooltips batch-cont-icons control-icon @strLOCREMTag"></span>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        }
                        else
                        {
                            foreach (tblBatchController BC in BayBCs)
                            {
                                strLOCREMTag = BC.TagPrefix + "_LOCREM";
                                string BCSuff = "BC" + string.Format("{0:00}", BC.SlaveID);
                                byte iArmNo = (BC.tblLoadingPointMasters.FirstOrDefault().ArmNo ?? 0);
                                string ArmNo = string.Format("{0:00 }", iArmNo);
                                string BayArmSuffix = "B" + string.Format("{0:00}", BC.tblLoadingPointMasters.FirstOrDefault().BayID) + "_A" + string.Format("{0:00}", ArmNo);
                                double Preset = 0; double FillQty = 0; double Remaining = 0;
                                string ChBaySuffix = "";
                                if (loadDetailData != null)
                                {
                                    tblLoadDetail det = loadDetailData.Where(x => x.tblLoadingPointMaster.ArmNo == iArmNo && ((x.LoadStatus ?? 0) != 1 && (x.LoadStatus ?? 0) != 4)).OrderByDescending(x => x.LoadingStartTime ?? (new DateTime(9999, 12, 31))).FirstOrDefault();
                                    if (det != null)
                                    {
                                        Preset = (det.PresetQty ?? 0) + (det.SamplingQty ?? 0) - (det.PrevBaseQty ?? 0) - (det.PrevBlendQty ?? 0);
                                        FillQty = ((det.BaseProdQtyGrs ?? 0) + (det.EthBlendingQtyGrs ?? 0));
                                        Remaining = (Preset - FillQty);
                                        ChBaySuffix = "CH" + det.CompNo.ToString("D2") + "_B" + string.Format("{0:00}", det.BayID);
                                    }
                                }
                                <div class="batch-controller-box box-small">
                                    <div class="bay-cont">
                                        <div class="batch-cont-row">
                                            <div class="arm-col-left">
                                                <label>Primary</label>
                                                <div class="val">
                                                    <span class="circle-cont">
                                                        <span class="@(BC.TagPrefix+"_CONN01") status_bad"></span>
                                                    </span>
                                                </div>
                                            </div>
                                            <div class="arm-col-right">
                                                <label>Secondary</label>
                                                <div class="val">
                                                    <span class="circle-cont">
                                                        <span class="@(BC.TagPrefix+"_CONN02") status_bad"></span>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="batch-controller-bg M_@BC.BCMakes.Value.ToString("D2") Q_@BayBCs.Count().ToString("D2")">
                                            <div class="prod-detail">
                                                <div class="col-lg-12 no-padd">
                                                    <div class="batch-cont-detail BC_MSG_@BayArmSuffix">?</div>
                                                </div>
                                            </div>
                                            <div class="prod-detail align-bottom">
                                                <div class="col-lg-12 no-padd">
                                                    <div class="col-lg-12 padd-l-10 no-padd-right odd-row">Preset: <span class="float-r">@Preset</span></div>
                                                    <div class="col-lg-12 padd-l-10 no-padd-right even-row">Filled: <span class="float-r QTY_ACC_@ChBaySuffix">@FillQty</span></div>
                                                    <div class="col-lg-12 padd-l-10 no-padd-right odd-row">Rem: <span class="float-r QTY_REM_@ChBaySuffix">@Remaining</span></div>
                                                </div>
                                            </div>
                                            @if (ViewSteps)
                                            {<div class="batch-cont-temp-text batch-cont-temp-text_@ArmNo LP_ACTION_@BayArmSuffix"></div>}
                                            else
                                            {<div class="batch-cont-temp-text batch-cont-temp-text_@ArmNo LP_ACTION"></div>}

                                        </div>
                                        <div class="bay-head text-center">
                                            BATCH CONTROLLER
                                            <div class="batch-cont-action-icon">
                                                @*<span title="" data-tooltip-attr="LOCREM" class="tooltips batch-cont-icons control-icon @strLOCREMTag" onclick="OpenBayLOCREMModal('@BC.TagPrefix', 'BAY_LOCREM', '@strLOCREMTag', '@BC.BCNo' , '@Session[clsConstants.UserID]', '@Session[clsConstants.LoginID]', '@Session[clsConstants.UserName]'); cancelBubble(event);" data-opcvalue="False"></span>*@
                                                <span title="" data-tooltip-attr="LOCREM" class="tooltips batch-cont-icons control-icon @strLOCREMTag" data-opcvalue=""></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                    <div class="col-lg-2 col-sm-2 col-md-2 bay-push-box">
                        @*<div class="bay-cont">
                            <div class="bay-head text-center">RIT ARM 2</div>
                            <div class="rit-bg">
                                <div class="rit-box-container">
                                    <span class="rit-start">
                                        <span class="rit_start_0 RIT_START_A02"></span>
                                        <span class="rit-btn-lbl">START</span>
                                    </span>
                                    <span class="rit-ack">
                                        <span class="rit_ack_0 RIT_ACK_A02"></span>
                                        <span class="rit-btn-lbl">ACK</span>
                                    </span>

                                        <div class="rit-stop">
                                            <span class="rit_stop_0 RIT_STOP_A02"></span>
                                            <span class="rit-btn-lbl stop">STOP</span>
                                        </div>
                                    </div>
                                </div>
                            </div>*@
                        <div class="bay-cont" style="display:@strBPBS">
                            <div class="bay-head text-center">BAY PBS</div>
                            <div class="bay-push-bg">
                                <div class="bay-push-box-container">
                                    <span class="bay-push-start">
                                        <span class="safety_bco_false SAFETY_BCO_@BayId"></span>
                                        <span class="bay-push-btn-lbl">BATT</span>
                                    </span>
                                    <span class="bay-push-ack">
                                        <span class="safety_hb_false SAFETY_HB_@BayId"></span>
                                        <span class="bay-push-btn-lbl">HBR</span>
                                    </span>

                                    <div class="bay-push-stop">
                                        <span class="safety_fe_false SAFETY_FE_@BayId"></span>
                                        <span class="bay-push-btn-lbl stop">EXTG</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="dvTruckDetails" class="col-lg-6 col-sm-6 col-md-6">
                    <div id="bayTruck" class="bay-truck @CustName @Application pull-right" style="@visibility">
                        <div class="bay-truck-fill-container">
                            @if (loadDetailData != null)
                            {
                                <div class="bay-truck-info">
                                    @foreach (tblLoadDetail loadDetail in loadDetailData)
                                    {
                                        CompWidth = Convert.ToDouble(width * loadDetail.PresetQty) + 1;
                                        string ChBaySuffix = "CH" + loadDetail.CompNo.ToString("D2") + "_B" + string.Format("{0:00}", loadDetail.BayID);
                                        double PreviousQty = ((loadDetail.PrevBaseQty ?? 0) + (loadDetail.PrevBlendQty ?? 0));
                                        double Filled = ((loadDetail.BaseProdQtyGrs ?? 0) + (loadDetail.EthBlendingQtyGrs ?? 0));

                                        <div class="box" style="width:@CompWidth%;" id="chamber_@loadDetail.CompNo">
                                            <div class="fill fill_@ChBaySuffix" style="background-color: @loadDetail.tblProduct.ProductColor ; height:@(((PreviousQty+Filled) / loadDetail.PresetQty) * 100)%;"></div>
                                            <div class="hsd-ltr text-center"><strong>@loadDetail.tblProduct.ProdNameShort</strong></div>
                                            <div class="hsd-ltr text-center EFF_QTY_ACC_@ChBaySuffix" id="EFF_QTY_ACC_@ChBaySuffix"><strong>@(Filled)</strong></div>
                                            <div class="hsd-ltr text-center"><strong>@(loadDetail.PresetQty - PreviousQty)</strong></div>
                                            <div class="hsd-ltr text-center"><strong><span class="percentage" data-id="@ChBaySuffix"></span></strong></div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="truck-fill-wrapper" id="truckFillWrapper"></div>
                                <div class="bay-truck-fill" style="height:0%; background-color:@Prodcolor;"></div>

                                <table class="bay-truck-fill-tbl">
                                    <tr>
                                        <td><span class="PRODUCT_NAME"></span></td>
                                        <td><span class="percentage" data-id=""></span></td>
                                    </tr>
                                </table>
                            }
                        </div>
                        <div class="er ER_@BayId">
                            <span class="earth-baseline one"></span>
                            <span class="earth-baseline two"></span>
                            <span class="earth-baseline three"></span>
                        </div>
                    </div>
                    <table class="detail-tbl" style="width:95%">
                        <tbody>
                            <tr>
                                <td class="bay-lbl" style="width:14%"><span class="">TRUCK NO.</span></td>
                                <td class="bay-val" style="width:20%"><span id="TRUCK_NO_@BayId">@(loadDetailData != null ? mast.tblTruckMaster.TruckNumber : string.Empty)</span></td>
                                <td class="bay-lbl" style="width:14%"><span class="">FAN NO.</span></td>
                                <td class="bay-val" style="width:20%"><span id="FAN_NO_@BayId">@(loadDetailData != null ? FAN_No : string.Empty)</span></td>
                                <td class="bay-lbl" style="width:15%"><span class="">CARD NO.</span></td>
                                <td class="bay-val" style="width:17%">
                                    <input id="spnCardNumber" type="number" min=1 readonly class="editable-input CARD_NO_@BayId" ondblclick="this.readOnly='';" onkeyup="updateGlyphButton('CARD_NO_@BayId','GLYPH_@BayId')" onfocus="updateGlyphButton('CARD_NO_@BayId','GLYPH_@BayId')"
                                           style="border: 0px;width: 75%;" value="@(loadDetailData != null ? mast.tblCard.CardNumber.ToString() : string.Empty)">
                                    <span class="glyphicon glyphicon-upload hide" id="@("GLYPH_"+BayId)" onclick="SetBayCardNo('Force Card No on Bay','Force Bay Card No at @BayId','CARD_NO_@BayId','@BayNo','@Session[clsConstants.UserID]')" aria-hidden="true"></span>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row hidden-lg hidden-md">
    Test in mobile
</div>

<div class="modal fade" id="BayLOCREMModal" tabindex="-1" role="dialog" aria-labelledby="ModeChangeModalLabel" aria-hidden="true" data-backdrop="static" data-keyboard="true" draggable="false">
    <div class="modal-dialog mode-control-modal">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3 class="modal-title" id="LocRemLabel">Change Mode</h3>
            </div>
            <div class="modal-body">
                <div id="dvChangeMode" class="automanual-popup">
                    <span id="hdnLOCREMMode" data-opcvalue="" class="" style="display:none;"></span>
                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Current Mode</th>
                                <th>New Mode</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    <div class="relative">
                                        <span class="control-icon BAY_LOCREM"></span>
                                    </div>
                                    <div class="mode-lbl remotemode BAY_LOCREM" data-opcvalue="True">
                                        REMOTE MODE
                                        <span class="mode-lbl-subtxt">Remote Operation from PC</span>
                                    </div>
                                    <div class="mode-lbl localmode BAY_LOCREM" data-opcvalue="True">
                                        LOCAL MODE
                                        <span class="mode-lbl-subtxt">Locally operated from Equipment</span>
                                    </div>
                                </td>
                                <td>
                                    <div class="relative">
                                        <span class="control-icon BAY_LOCREM new-mode"></span>
                                    </div>
                                    <div class="mode-lbl remotemode BAY_LOCREM new-mode" data-opcvalue="True">
                                        REMOTE MODE
                                        <span class="mode-lbl-subtxt">Remote Operation from PC</span>
                                    </div>
                                    <div class="mode-lbl localmode BAY_LOCREM new-mode" data-opcvalue="True">
                                        LOCAL MODE
                                        <span class="mode-lbl-subtxt">Locally operated from Equipment</span>
                                    </div>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="btnModeChangeOK">Set</button>
                <button type="button" class="btn btn-primary" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>
<script>
    opcPageName = '@String.Join(",",lstOtherPages)'+',';
</script>
<script src="~/Scripts/PageJS/PlantView/BayView/BayView.js"></script>
