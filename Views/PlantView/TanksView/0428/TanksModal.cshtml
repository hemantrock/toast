@using TOAST.Shared;
@using TOAST.Business;
@using TOAST.Data.Model;
@model TOAST.Data.Model.tblTank
@{
    ViewBag.Title = "Plant View - Tank View";
    Layout = null;
    tblTank tank = Model;
    List<tblTank> SameGrpTanks = ViewBag.SameGrpTanks;
    List<tblMOVMaster> tankMOVs = tank.tblMOVMasters.ToList();
    List<tblTagMaster> DeviceTags = ViewBag.DeviceTags;
    string TkPrefix = tank.TagPrefix;
    bool ShowSafetyRadarDataLevel = ViewBag.ShowSafetyRadarLevel;
    bool isWater = (tank.tblProduct.ProductName.ToUpper().Contains("WATER")) ? true : false;
    string CustName = clsConfig.CustomerName;
    bool ShowInterlockNotes = (CustName == "HPCL");
}
<div class="modal-dialog tank-modal" style="width: 800px;">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h3 class="modal-title" id="myTANKVIEWModalLabel">@(tank.TankName) | @tank.tblProduct.ProdNameShort</h3>
        </div>
        <div class="modal-body" id="myMOVModalBody" style="padding: 5px;">
            @{
                string SameProdTanksTags = String.Join(",", SameGrpTanks.Select(x => (x.TagPrefix + "_MODE_DDL")).ToList());
                if (SameProdTanksTags != "")
                {
                    <input type="hidden" id="SameGrpTankModeTags" value="@(SameProdTanksTags)" />
                }
            }
            <div class="row">
                <div class="col-lg-12">
                    <div class="col-lg-5">
                        <div class="box-panel tank-level-detail-container">
                            <div class="tank-level-detail-heading">Tank Details</div>
                            <div class="tank-level-detail-row odd">
                                <div class="tank-level-detail-lbl">Tank Name</div>
                                <div class="tank-level-detail-val">@(tank.TankName)</div>
                            </div>
                            <div class="tank-level-detail-row even">
                                <div class="tank-level-detail-lbl">Product Name</div>
                                <div class="tank-level-detail-val">@tank.tblProduct.ProdNameShort</div>
                            </div>
                            <div class="tank-level-detail-row even">
                                <div class="tank-level-detail-lbl">Capacity (KL)</div>
                                <div class="tank-level-detail-val">@tank.MaxVolume</div>
                            </div>
                        </div>
                        <div class="box-panel tank-level-detail-container">
                            <div class="tank-level-detail-heading">Measured Values</div>
                            <div class="tank-level-detail-row odd">
                                @{
                                    string strLevelUOM = "";
                                    tblTagMaster LevelTag = DeviceTags.Where(x => x.TagName == TkPrefix + "_LEVEL").FirstOrDefault();
                                    if (LevelTag != null && LevelTag.UnitId != null && LevelTag.tblUOMMaster != null) { strLevelUOM = LevelTag.tblUOMMaster.UOM; }
                                }
                                <div class="tank-level-detail-lbl">Level (@strLevelUOM)</div>
                                <div class="tank-level-detail-val get-hover @(TkPrefix)_LEVEL" onclick="OpenChartModal('@(TkPrefix+"_LEVEL")')"></div>
                            </div>
                            @if (tank.NoOfTempEle > 0)
                            {
                                <div class="tank-level-detail-row even">
                                    <div class="tank-level-detail-lbl">Temperature (℃)</div>
                                    <div class="tank-level-detail-val get-hover @(TkPrefix)_AVG_TEMP" onclick="OpenChartModal('@(TkPrefix+"_AVG_TEMP")')"></div>
                                </div>
                            }
                            <div class="tank-level-detail-row odd">
                                <div class="tank-level-detail-lbl">Total Observed Volume(KL)</div>
                                <div class="tank-level-detail-val @(TkPrefix)_TOV"></div>
                            </div>
                            <div class="tank-level-detail-row even">
                                <div class="tank-level-detail-lbl">Product Mass (Kg)</div>
                                <div class="tank-level-detail-val @(TkPrefix)_MASS"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-7">
                        <div class="oil-tank-product-row">
                        </div>
                        <div class="oil-tank-container">
                            <div class="tank-block @tank.tblTankType.TankType">
                                <span class="maintainence-mode-icon @(TkPrefix)_MAINT"></span>
                                <span class="stair">
                                    <span class="app-logo @CustName"></span>
                                </span>
                                <span class="@(TkPrefix + "_LEVEL")" style="display: none;"></span>
                                <span class="oil-tank-fill-container @(TkPrefix)_OIL_TANK_FILL">
                                    @{
                                        if (tank.DefloatLevel > 0)
                                        {
                                            <span class="level-line-cont tooltips" title="Level ('@(tank.DefloatLevel) @(clsConfig.TFMSLevelUnit)') below which Tank will Defloat">
                                                <span class="level-line"></span>
                                                <span class="level-value"></span>
                                            </span>
                                        }
                                    }
                                    <span class="oil-tank-base"></span>
                                    <span class="oil-tank-fill" style="background-color:@tank.tblProduct.ProductColor; height: 3%"></span>
                                </span>
                                <span class="tank-lbl-wrapper">
                                   
                                </span>
                                <span class="@(TkPrefix)_FLW_RATE level-rate-icon"></span>
                            </div>

                            <span class="thermometer-block">
                                <span class="thermometer-lbl"></span>
                                @*<span class="thermometer-fill-percentage"><span class="@(tank.TankName)_PERCENTAGE" data-id=""></span> %</span>*@
                                <span class="thermometer-fill-percentage tooltips" title="Tank % filled"><span class="@(TkPrefix)_PER_LVL"></span> %</span>
                                <span class="thermometer-fill-prod-level get-hover tooltips" title="Process Radar Product Level" onclick="OpenChartModal('@(TkPrefix+"_LEVEL")', '@(tank.PageName)'); cancelBubble(event);"><span class="@(TkPrefix)_LEVEL"></span> @clsConfig.TFMSLevelUnit</span>
                                <span class="thermometer-fill-degree tooltips" title="Product Avg Temp."><span class="@(TkPrefix)_AVG_TEMP"></span> °C</span>
                                @if (!String.IsNullOrWhiteSpace(tank.DensityTagPrefix))
                                {<span class="observed-density tooltips" title="Observed Density"><span class="@((tank.DensityTagPrefix ?? TkPrefix))_AMB_DENSITY"></span> kg/m³</span>}
                            </span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <div class="col-lg-6">
                    </div>
                    <div class="col-lg-6">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    //$(function () {
    //    $('.on-off-btn').bootstrapToggle();
    //})
    createTooltip();

    //var ele = document.getElementById("OpenInterLockBtn");
    $('#OpenInterLockBtn').on('click', function () {
        $('#InterlockPanel').toggleClass('open');
        $('#myTANKVIEWModal').toggleClass('tank-modal-left-spacing');

    });
    $('#sideBarCloseIcon').on('click', function () {
        $('#InterlockPanel').removeClass('open');
        $('#myTANKVIEWModal').removeClass('tank-modal-left-spacing');
    });

    $('.close').on('click', function () {
        var tankModal = $('#myTANKVIEWModal');
        if (tankModal.hasClass('tank-modal-left-spacing')) {
            $('#InterlockPanel').removeClass('open');
            tankModal.removeClass('tank-modal-left-spacing');
        }
    });



    function showInterLockModeContent() {
        selectedIndex = $('#ddlInterlockMode').val();
        if (selectedIndex == undefined) { return; }
        switch (selectedIndex) {
            case "2":
                $('#Dispatch').show();
                $('.inter-lock-content > div').not('#Dispatch').hide();
                break;
            case "3":
                $('#Maintenance').show();
                $('.inter-lock-content > div').not('#Maintenance').hide();
                break;
            case "4":
                $('#Dormant').show();
                $('.inter-lock-content > div').not('#Dormant').hide();
                break;
            case "5":
                $('#Receipt').show();
                $('.inter-lock-content > div').not('#Receipt').hide();
                break;
            case "6":
                $('#InterTankReceipt').show();
                $('.inter-lock-content > div').not('#InterTankReceipt').hide();
                break;
            case "9":
                $('#InterTankDispatch').show();
                $('.inter-lock-content > div').not('#InterTankDispatch').hide();
                break;
        }
    }
</script>